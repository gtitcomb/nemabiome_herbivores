"0","# Define state variables and initial conditions"
"0","init <- c(S = 1000, E = 0, I = 1, R = 0, cum_new_infections = 0)"
"0","# Define parameters"
"0","params <- c(c = 4, rho = 0.2, nu = 1/7, f_s= (0.01)/2, f_r=(0.01)/2, m = 0.01, rate = 1/8)"
"0","# Define length of simulation and output steps"
"0","t <- seq(0, 500, 1)"
"0","# Define function"
"0","fx_sis_bd <- function(t, y, params) {"
"0","with(c(as.list(y), params), {"
"0","# Define population size"
"0","N <- S + E + I + R"
"0","# Define differential equations"
"0","dS <- (f_s * N) - (S * I/N * c * rho) - (m * S)"
"0","dE <- -(E*rate) - (m*E) + (S*c*rho*I/N)"
"0","dI <- (E * rate) - (I * nu) - (m * I)"
"0","dR <- (f_r * N) + (I * nu) - (m * R)"
"0","# Calculate number of new infections"
"0","cum_new_infections <- c * rho * S * I/N"
"0","# Specify output to be returned by function"
"0","list(c(dS, dE, dI, dR, cum_new_infections))"
"0","})"
"0","}"
"0","# Call lsoda function with initial conditions, times, SI"
"0","# function, and parameters defined above."
"0","si_output <- as.data.table(lsoda(y = init, times = t, func = fx_sis_bd,"
"0","parms = params))"
"0","# Melt dataset for easy plotting"
"0","si_output_melted <- melt(data = si_output, id.vars = ""time"","
"0","measure.vars = c(""S"", ""E"",""I"", ""R""))"
"0","ggplot(data = si_output_melted) + geom_line(aes(x = time, y = value,"
"0","col = variable), size=2, alpha=0.3) + scale_color_manual(breaks = c(""S"", ""E"",""I"", ""R""), labels = c(""Susceptible"", ""Exposed"", ""Infected"", ""Recovered""),"
"0","values = c(""green"", ""orange"", ""red"", ""gray"")) + labs(x = ""Time"","
"0","y = ""Number of individuals"", col = ""State"") + theme(panel.background = element_blank(),"
"0","panel.grid = element_blank(), panel.border = element_rect(color = ""black"","
"0","fill = NA))"
