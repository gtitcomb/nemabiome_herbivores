---
title: "Floral_Analysis"
author: "John Parsons"
date: "2/13/2019"
output:
  word_document: default
  pdf_document: default
  html_document: default
---
# Existing Questions

1. Valid to average transects for NMDS, resulting in 9 "communities" for each site?

# To-Do's

1. Residuals analyses of best-fit models - not sure how to interpret the resulting number of the analysis?
2. Simulate model outputs to assess effects and residuals

# Setup
```{r setup, include=FALSE}
setwd("/Users/John/Desktop/Research/FloralTraits")

#install.packages("tidyverse")
library(tidyverse)
#install.packages("car")
library(car)
library(plyr)
library(dplyr) #data transformations
install.packages("mosaic")
library(mosaic) #assignment of native and invasive status via derivedFactor
#install.packages("vegan")
library(vegan) #calculation of Shannon diversity
#install.packages("lme4")
library(lme4)
install.packages("coefplot")
library(coefplot)
library(MASS)
library(nlme)
install.packages("fitdistrplus")
library(fitdistrplus) #skewness-kurtosis plots
install.packages("glmmTMB")
library(glmmTMB)
#install.packages("MuMIn")
library(MuMIn) #AICc
#install.packages("effects")
library(effects) #plotting of model effects
install.packages("DHARMa")
library(DHARMa) #simulating model outputs and diagnostics
```

# Data wrangling
```{r warning=FALSE}
arid1 <- read.csv("Arid_1.csv")
arid2 <- read.csv("Arid_2.csv")
arid2 <- arid2[-c(55,56,57,58,59,60),]
arid3 <- read.csv("Arid_3.csv")
interm1 <- read.csv("Interm_1.csv")
interm2 <- read.csv("Interm_2.csv")
interm3 <- read.csv("Interm_3.csv")
mesic1 <- read.csv("Mesic_1.csv")
mesic1 <- dplyr::rename(mesic1, TRITELEIA=TRITELIEA)
mesic2 <- read.csv("Mesic_2.csv")
mesic2 <- dplyr::rename(mesic2, TRITELEIA=TRITELIEA)
mesic3 <- read.csv("Mesic_3.csv")
mesic3 <- dplyr::rename(mesic3, TRITELEIA=TRITELIEA)

names(floral.dat)[1] <- "SURVEY"
floral.dat <- bind_rows(arid1,arid2,arid3,interm1,interm2,interm3,mesic1,mesic2,mesic3)
floral.dat <- mutate_at(floral.dat, vars(6:27), funs(replace(., is.na(.), 0)))
floral.dat <- filter(floral.dat, !is.na(SURVEY)) 

#convert survey, block and transect variables from integer to factor
floral.dat$SURVEY <- factor(floral.dat$SURVEY)
floral.dat$SITE <- factor(floral.dat$SITE)
floral.dat$BLOCK <- factor(floral.dat$BLOCK)
floral.dat$TRANSECT <- factor(floral.dat$TRANSECT)
floral.dat$PLOT <- factor(floral.dat$PLOT)

#fixing erroneus value, removing weird column "X"
floral.dat["39", "POPCORN"] = 3560
floral.dat <- dplyr::select(floral.dat, -X)

#convert big sunset to integer
floral.dat$BIG_SUNSET <- as.integer(floral.dat$BIG_SUNSET)

#convert to long format
floral.long <- gather(floral.dat, species, abund, ERODIUM:BLUE.BUSH.PENSTAMEN, factor_key=TRUE)

#new data frames with only the max of the the three observations of each species
floral.max.long <- floral.long %>% ddply(.(SITE, BLOCK, PLOT, TRANSECT, species), summarize, max_abund=max(abund))

floral.max <- floral.max.long %>% spread(species, max_abund)
```

# Initial Visualizations
```{r}
ggplot(floral.long, aes(x=abund))+
  geom_histogram(binwidth=100)+
  coord_cartesian(xlim=c(0,11000))
count(floral.long, abund==0)

floral.long %>% ddply(.(species), summarize, mean=list(mean(abund))) %>% unnest(mean) %>% 
  ggplot(aes(x=species, y=mean))+
  geom_bar(stat="identity")

floral.long %>% filter(abund>100) %>% ddply(.(species, PLOT), summarize, mean=list(mean(abund))) %>% unnest(mean) %>%
  ggplot(aes(x=species, y=mean, fill = PLOT))+
  geom_bar(stat="identity", position="stack")

floral.long %>% 
  #filter(abund>100) %>% 
  ddply(.(species, SITE), summarize, mean=list(mean(abund))) %>% unnest(mean) %>%
  ggplot(aes(x=species, y=mean, fill = SITE))+
  geom_bar(stat="identity", position="fill") +
  coord_flip()
```

# Transformations 
```{r}
#Calculate total abundance (all species in an observation)
floral.max <- mutate(floral.max, total_abund = rowSums(floral.max[,5:25]))
floral.max$total_abund <- as.integer(floral.max$total_abund)

#Calculate abundance of invasives
floral.max <- mutate(floral.max, invasive_abund = (ERODIUM + MUSTARD))

#Calculate proportion of invasives in each plot (any other invasives?)
floral.max <- mutate(floral.max, invasive_prop = ((invasive_abund)/(total_abund)))

ggplot(floral.max, aes(x=invasive_prop)) +
  geom_density()+
  facet_wrap(SITE~PLOT)
#arid and interm sites show some amplification of invasives under increased grazing

#Calculate H for all species and for natives only
floral.abund.max <- dplyr::select(floral.max, ERODIUM:BLUE.BUSH.PENSTAMEN)
floral.abund.max.native <- dplyr::select(floral.abund.max, -ERODIUM, -MUSTARD)

floral.max <- mutate(floral.max, H = vegan::diversity(floral.abund.max))
floral.max <- mutate(floral.max, native_H = vegan::diversity(floral.abund.max.native))

floral.max.long %>% 
  #filter(abund>100) %>% 
  ddply(.(species, SITE), summarize, mean=list(mean(max_abund))) %>% unnest(mean) %>%
  ggplot(aes(x=species, y=mean, fill = SITE))+
  geom_bar(stat="identity", position="fill")+
  coord_flip()
```

# (Very) Basic Analyses

Looking at differences between plots and sites for
1. Invasive Proportion
2. Shannon Diversity
  a) All species
  b) Invasive species
3. Total Abundance

1. Invasive Proportion
```{r}
ip_mean_table <- floral.max %>% filter(!is.nan(invasive_prop)) %>% filter(SITE!="Mesic") %>% ddply(.(PLOT), summarize, mean=list(mean_se(invasive_prop))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2)
ip_mean_table <- floral.max %>% filter(!is.nan(invasive_prop)) %>% filter(SITE!="Mesic") %>% ddply(.(SITE), summarize, mean=list(mean_se(invasive_prop))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2) %>% bind_rows(ip_mean_table) %>% dplyr::select(SITE, y, SE, PLOT) %>% dplyr::rename(Invasive_Proportion=y)
View(ip_mean_table)
```
* Arid sites have higher invasive proportion than intermediate sites
* WC sites have ~0.04 more invasive proportion than O sites, which have ~0.04 more invasive proportion than W sites

2. Shannon Diversity
  a) All Species
```{r}
H_mean_table <- floral.max %>% ddply(.(PLOT), summarize, mean=list(mean_se(H))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2)
H_mean_table <- floral.max %>% ddply(.(SITE), summarize, mean=list(mean_se(H))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2) %>% bind_rows(H_mean_table) %>% dplyr::select(SITE, y, SE, PLOT) %>% dplyr::rename(H=y)
View(H_mean_table)
```
* Interm sites have highest diversity, followed by arid, then mesic
* W plots have the highest diversity, followed by O, then WC

  b) Native Species
```{r}
nat_H_mean_table <- floral.max %>% ddply(.(PLOT), summarize, mean=list(mean_se(native_H))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2)
nat_H_mean_table <- floral.max %>% ddply(.(SITE), summarize, mean=list(mean_se(native_H))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2) %>% bind_rows(nat_H_mean_table) %>% dplyr::select(SITE, y, SE, PLOT) %>% dplyr::rename(Native_H=y)
View(nat_H_mean_table)
```
* Native diversity is highest in interm, then mesic, and much lower in arid
* W plots have highest native diversity, followed by O and then WC

3. Total Abundance
```{r}
total_abund_mean_table <- floral.max %>% ddply(.(PLOT), summarize, mean=list(mean_se(total_abund))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2)
total_abund_mean_table <- floral.max %>% ddply(.(SITE), summarize, mean=list(mean_se(total_abund))) %>% unnest(mean) %>% mutate(SE=(ymax-ymin)/2) %>% bind_rows(total_abund_mean_table) %>% dplyr::select(SITE, y, SE, PLOT) %>% dplyr::rename(Total_Abundance=y)
View(total_abund_mean_table)
```
* Arid sites have the highest abundance by far, followed by mesic, and interm is much lower
* Total abundance is highest in WC plots, then W plots, and much lower in O plots

# Preliminary observations
1. Native and total diversity is highest, and invasive proportion is lowest, in interm plots. Mesic sites have the second most diversity, and arid sites have both the least diversity and the most invasives. If diversity and proportion of natives are desireable outcomes, interm plots are the "best", and arid are the "worst"
2. For the same markers, W plots are "best" and WC plots are the "worst", with O being somewhere in the middle
3. Abundance follows an inverse pattern: Arid > Mesic > Interm and WC > W > O. "Best" management practice depends on desired outcome (productivity vs diversity). Productivity isn't necessarily only good for a livestock goal, and might be a better outcome for both managers and the ecosystem due to more resources for consumers and pollinators.

# Modeling

## Invasive Proportion Model

Visualization 
```{r}
hist(floral.max$invasive_prop)

ip_plot2 <- floral.max %>% dplyr::rename(Site=SITE) %>% filter(!is.nan(invasive_prop), Site!="Mesic") %>% ddply(.(PLOT, Site), summarize, mean_se=list(mean_se(invasive_prop))) %>% unnest(mean_se) %>% 
  ggplot(aes(x=PLOT, y=y, color=Site))+
  geom_point(size=1.5
    #position=position_dodge(width=0.5), 
    )+
  geom_errorbar(aes(ymax=ymax, ymin=ymin), size=1, width=0.1 
                #position=position_dodge(width=0.5)
                ) +
  geom_path(aes(group=Site), 
            #position=position_dodge(width=0.5), 
            linetype=2) +
  labs(x = "Plot", y = "Invasive Proportion") +
  theme_bw() +
  theme(axis.title=element_text(size=20), axis.text=element_text(size=14), legend.title = element_text(size=20), legend.text = element_text(size=14))

ip_plot2
ggsave("ip_plot2.png", width=7, height=7)
```

New df with total and invasive abundances rounded and SITE != Mesic
```{r}
fm.ip <- floral.max %>% filter(SITE!="Mesic") %>% mutate(total_abund=round(total_abund, digits=0)) %>% mutate(invasive_abund=round(invasive_abund, digits=0)) 
hist(fm.ip$invasive_prop)
```

### 1. Testing Distributions 
(pretty sure binomial is the only appropriate one)
```{r}
P1_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~0, family=binomial, data=fm.ip)

P2_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)
summary(P2_fm)
chat <- (42329.5/99)
chat #overdispersed - is this accounted for by including zero inflation?

mods <- list(P1_fm, P2_fm)
mod.table <- model.sel(mods)
mod.table
```
*ZI is better fit

Testing ZI models:
```{r}
P3_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~(1|BLOCK), family=binomial, data=fm.ip)

P4_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~(1|BLOCK/TRANSECT), family=binomial, data=fm.ip)

P5_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~(1|PLOT), family=binomial, data=fm.ip)

P6_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~(1|SITE), family=binomial, data=fm.ip)

mods <- list(P2_fm, P3_fm, P4_fm, P5_fm, P6_fm)
mod.table <- model.sel(mods)
mod.table
```
* normal ZI is best model

### 2. Optimal Random Effects Structure

Random intercepts: (1|BLOCK/TRANSECT) is only valid random intercept

Comparing no-random-intercepts model to full model P2:
```{r}
P7_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE, weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)

mods <- list(P2_fm, P7_fm)
mod.table <- model.sel(mods)
mod.table
```
* inclusion of random effect (1|BLOCK/TRANSECT) improves model

Random Slopes:
```{r}
P11_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1 + PLOT|BLOCK/TRANSECT), weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)
# failed to converge

P12_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT*SITE + (1 + SITE|BLOCK), weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)
# only converges when transect is removed

mods <- list(P2_fm, P12_fm)
mod.table <- model.sel(mods)
mod.table
```
* random intercepts only model is better fit

### 3. Optimal Fixed Effects Structure

Fixed Effects to test:
* No FE
* PLOT
* SITE
* PLOT+SITE
* PLOT*SITE

```{r}
P0_fm <- glmmTMB((invasive_abund/total_abund) ~ (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)
#null model

P8_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)

P9_fm <- glmmTMB((invasive_abund/total_abund) ~ SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)

P10_fm <- glmmTMB((invasive_abund/total_abund) ~ PLOT + SITE + (1|BLOCK/TRANSECT), weights=total_abund, ziformula=~1, family=binomial, data=fm.ip)

#P2 is full model
mods <- list(P2_fm, P0_fm, P8_fm, P9_fm, P10_fm)
mod.table <- model.sel(mods)
mod.table
#P2 is best model, plot/site interaction greatly improves model

summary(P2_fm)
```

### 4. Analyzing residuals of the optimal model

```{r}
#from Zuur 2016
E2 <- resid(P2_fm, type = "pearson")
# error: "pearson residuals are not implemented for models with zero-inflation or variable dispersion""

N <- nrow(totl.flowers)
p <- length(fixef(M4)) + 3 #three sigmas
sum(E4^2)/(N-p)
```

### 5. Quantifying importance of terms by comparing model without term to model with term

```{r}
#Importance of PLOT
# ~SITE vs ~PLOT+SITE (should this be PLOT*SITE?)
mods <- list(P9_fm, P10_fm)
mod.table <- model.sel(mods)
mod.table
#delta AIC = 7407.8
anova(P9_fm, P10_fm)
# p < 0.001

#Importance of SITE
# ~PLOT vs ~PLOT+SITE (should this be PLOT*SITE?)
mods <- list(P8_fm, P10_fm)
mod.table <- model.sel(mods)
mod.table
#delta AIC = 244.08
anova(P8_fm, P10_fm)
# p < 0.001

#Importance of PLOT*SITE
# ~PLOT*SITE vs PLOT+SITE
mods <- list(P2_fm, P10_fm)
mod.table <- model.sel(mods)
mod.table
# delta AIC = 841.67
anova(P2_fm, P10_fm)
# p < 0.001
```

### 6. Analyzing fixed and random effects and residuals

```{r}
#Dharma Diagnostics
simulationOutput <- simulateResiduals(fittedModel = P2_fm, n = 250)

simulationOutput$scaledResiduals

plot(simulationOutput = simulationOutput)

#Treatment, Climate
plotResiduals(fm.ip$PLOT, simulationOutput$scaledResiduals)

plotResiduals(fm.ip$SITE, simulationOutput$scaledResiduals)

testUniformity(simulationOutput = simulationOutput)

testDispersion(P2_fm)

testZeroInflation(simulationOutput)

#get values for random effects by random effect level
ranef(P2_fm)
fixef(P2_fm)

#Visualizing fixed effects
plot(allEffects(P2_fm, partial.residuals = TRUE))
plot(allEffects(P2_fm))

#dotplot visualizing the variance of the random effects
dotplot(ranef(P2_fm, condVar=TRUE))
```

==============================================================================

## Shannon Diversity Model: All Species

Visualizations
```{r}
H_all_plot <- floral.max %>% dplyr::rename(Site = SITE) %>% ddply(.(PLOT, Site), summarize, mean_se=list(mean_se(H))) %>% unnest(mean_se) %>%
  ggplot(aes(x=PLOT, y=y, color=Site))+
  geom_point(size=1.5
            # position=position_dodge(width=0.5), 
            )+
  geom_errorbar(aes(ymax=ymax, ymin=ymin), size=0.8, width=0.08
                #, position=position_dodge(width=0.5)
                ) +
  geom_path(aes(group=Site), 
            #position=position_dodge(width=0.5),
            linetype=2) +
  labs(x = "Plot", y = "Diversity") +
  theme_bw() +
  theme(axis.title=element_text(size=20), axis.text=element_text(size=14), legend.title = element_text(size=20), legend.text = element_text(size=14))

H_all_plot
ggsave("H_all_plot.png")

hist(floral.max$H)
#looks fairly normal

min(floral.max$H)
#no zeroes

rm.fit <- floral.max$H
descdist(rm.fit, discrete=FALSE, boot=500)
```

```{r}

head(floral.max)
hist(floral.max$H)
qqnorm(floral.max$H) # That's really not too bad
powerTransform(floral.max$H)

library(lmerTest)
mod1 <- lmer(H ~ PLOT*SITE + (1|BLOCK/TRANSECT), data=floral.max)
r.squaredGLMM(mod1)

mod2 <- lmer(H ~ PLOT*SITE + (1|SITE), data=floral.max)
r.squaredGLMM(mod2)

summary(mod1)
plot(mod1)
ps <- predict(mod1)
w <- fitted(mod1)
plot(ps ~ floral.max$H)
cor(ps, floral.max$H)

wts <- 1/(w^2)
mod3 <- lmer(H ~ PLOT*SITE + (1|BLOCK/TRANSECT), weights = wts, data=floral.max)
summary(mod2)
pss <- predict(mod3)
plot(pss ~ floral.max$H)
cor(pss, floral.max$H) # slightly higher correlation


AICc(mod1)
AICc(mod2)
# As long as the underlying data is the same, then AICc is comparable across modeling methods.
```



### 1. Testing Distributions
```{r}
H1_m <- glmmTMB(H ~ PLOT*SITE + (1|BLOCK/TRANSECT), family=Gamma, ziformula=~0, data=floral.max)
# NA/NaN function evaluation, not an issue according to troubleshooting vignette

H12_m <- glmmTMB(H ~ PLOT*SITE + (1|BLOCK/TRANSECT), family=gaussian(), ziformula=~0, data=floral.max)
# failed to converge

H13_m <- glmmTMB(H ~ PLOT*SITE + (1|BLOCK/TRANSECT), family=poisson(), ziformula=~0, data=floral.max)

mods <- list(H1_m, H13_m)
mod.table <- model.sel(mods)
mod.table

summary(H1_m)

ps2 <- predict(H1_m, type="response")
plot(ps2 ~ floral.max$H)
cor(ps2, floral.max$H)


# Another plot
ggplot(floral.max, aes(x=ps, y=H))+
  geom_point(aes(color=SITE), size=2, alpha=0.5)+
  geom_point(aes(x=ps2, y=H, color=SITE), shape=2, size=4, alpha=0.5)+
  theme_bw()+
  geom_abline(slope=1, yintercept=0)+
  xlab("Predicted H")+
  ylab("Actual H")

#underdispersed
```
* Gamma is best distribution

### 2. Optimal Random Effects Structure

Random intercept removed:
```{r}
H2_m <- glmmTMB(H ~ PLOT*SITE, family=Gamma, ziformula=~0, data=floral.max)
H2_m2 <- lm(H ~ PLOT*SITE, data=floral.max)
summary(H2_m2)
plot(H2_m2)

# Using lmertest method to find significant effects -- same finding that REs dont' make a difference.
step(mod1)

mods <- list(H1_m, H2_m)
mod.table <- model.sel(mods)
mod.table
```
* model without random effects fits better, but going to keep B/T as per Bolker et al. 2009

Random Slopes:
```{r}
H6_m <- glmmTMB(H ~ PLOT*SITE + (1 + PLOT|BLOCK), family=Gamma, ziformula=~0, data=floral.max)
# failed to converge

H7_m <- glmmTMB(H ~ PLOT*SITE + (1 + SITE|BLOCK), family=Gamma, ziformula=~0, data=floral.max)
#failed to converge
```

### 3. Optimal Fixed Effects Structure

Fixed Effects to test:
* No F.E.
* PLOT
* SITE
* PLOT + SITE
* PLOT * SITE

```{r}
H0_m <- glmmTMB(H ~ (1|BLOCK/TRANSECT), family=Gamma, ziformula=~0, data=floral.max)
#null model

H3_m <- glmmTMB(H ~ PLOT + (1|BLOCK/TRANSECT), family=Gamma, ziformula=~0, data=floral.max)
# NA function evaluation

H4_m <- glmmTMB(H ~ SITE + (1|BLOCK/TRANSECT), family=Gamma, ziformula=~0, data=floral.max)
# NA function evaluation

H5_m <- glmmTMB(H ~ PLOT + SITE + (1|BLOCK/TRANSECT), family=Gamma, ziformula=~0, data=floral.max)
# NA function evaluation

# H1 is full model
mods <- list(H1_m, H0_m, H3_m, H4_m, H5_m)
mod.table <- model.sel(mods)
mod.table
```
* Model with PLOT*SITE is best
See lmertest method above -- I have the same finding.

### 4. Analyzing residuals of the optimal model

```{r}
#from Zuur 2016
E_H1 <- resid(H1_m, type = "pearson")

E_H1_b <- resid(mod1, type="pearson")
 
# I'm not sure what this is
N <- nrow(floral.max)
p <- length(fixef(H1_m)) + 3 #three sigmas
sum(E_H1^2)/(N-p)
```

### 5. Quantifying importance of terms by comparing model without term to model with term

```{r}
#Importance of PLOT
# ~SITE vs ~PLOT+SITE (should this be PLOT*SITE?)
mods <- list(H4_m, H5_m)
mod.table <- model.sel(mods)
mod.table
#delta AIC = 8.28 (weight = 0.016)
anova(H4_m, H5_m)
# p < 0.001

#Importance of SITE
# ~PLOT vs ~PLOT+SITE (should this be PLOT*SITE?)
mods <- list(H3_m, H5_m)
mod.table <- model.sel(mods)
mod.table
#delta AIC = 14.7 (weight = 0.001)
anova(H3_m, H5_m)
# p < 0.001

#Importance of PLOT*SITE
# ~PLOT*SITE vs PLOT+SITE
mods <- list(H1_m, H5_m)
mod.table <- model.sel(mods)
mod.table
# delta AIC = 29.36
anova(H1_m, H5_m)
# p < 0.001
```

### 6. Visualizing fixed and random effects

```{r}
#Dharma Diagnostics
simulationOutput <- simulateResiduals(fittedModel = H1_m, n = 250)
SO2 <- simulateResiduals(fittedModel=mod1, n=250) # you only have 160 observations though
SO3 <- simulateResiduals(fittedModel=H2_m2, n=160)
SO22 <- simulateResiduals(fittedModel=mod2, n=160)

sjPlot::plot_model(mod1, type="diag")

simulationOutput$scaledResiduals

plot(simulationOutput)
plot(SO2) # This is actually a lot better
plot(SO3) # random effects are better than no random effects
plot(SO22)


hist(ps[which(floral.max$SITE=="Interm")])
hist(floral.max[floral.max$SITE=="Interm",]$H)


hist(ps[which(floral.max$SITE=="Mesic")])
hist(floral.max[floral.max$SITE=="Mesic",]$H)

par(mfrow=c(1,2))
hist(ps[which(floral.max$SITE=="Arid")])
hist(floral.max[floral.max$SITE=="Arid",]$H)




#Plot and Site Residuals
plotResiduals(floral.max$PLOT, simulationOutput$scaledResiduals)
plotResiduals(floral.max$PLOT, SO2$scaledResiduals)

plotResiduals(floral.max$SITE, simulationOutput$scaledResiduals)
plotResiduals(floral.max$SITE, SO2$scaledResiduals) # This is where the problem is

# underdispersion for site 3 -- could try transformation
par(mfrow=c(1,3))
hist(floral.max[floral.max$SITE=="Arid",]$H)
hist(floral.max[floral.max$SITE=="Interm",]$H)
hist(floral.max[floral.max$SITE=="Mesic",]$H)

# The mesic plot is bimodal  -- why is this? 
summary(floral.max$H)
# not zero...Is this from averaging lots of zeros?


testUniformity(simulationOutput = simulationOutput)
testUniformity(simulationOutput = SO2)

testDispersion(H1_m)
testDispersion(mod1) # doesn't work for this model type

testZeroInflation(simulationOutput) # there are no zeroes so this doesn't make sense to test.

#get values for random effects by random effect level
ranef(H1_m)
fixef(H1_m)


#Visualizing fixed effects
plot(allEffects(H1_m, partial.residuals = TRUE))
plot(allEffects(H1_m))

plot(allEffects(mod1, partial.residuals = TRUE)) 

#dotplot visualizing the variance of the random effects
dotplot(ranef(H1_m, condVar=TRUE))

```

==============================================================================

## Shannon Diversity Model: Native Species

Visualizations
```{r}
H_native_plot <- floral.max %>% dplyr::rename(Site=SITE) %>% ddply(.(PLOT, Site), summarize, mean_se=list(mean_se(native_H))) %>% unnest(mean_se) %>%
  ggplot(aes(x=PLOT, y=y, color=Site))+
  geom_point(size=1.5
            # position=position_dodge(width=0.5), 
            )+
  geom_errorbar(aes(ymax=ymax, ymin=ymin), size=0.8, width=0.08
                #, position=position_dodge(width=0.5)
                ) +
  geom_path(aes(group=Site), 
            #position=position_dodge(width=0.5),
            linetype=2) +
  labs(x = "Plot", y = "Diversity") +
  theme_bw() +
  theme(axis.title=element_text(size=20), axis.text=element_text(size=14), legend.title = element_text(size=20), legend.text = element_text(size=14))

H_native_plot
ggsave("H_native_plot.png")

hist(floral.max$native_H)

min(floral.max$native_H)
count(floral.max, native_H == 0)
#4 zeroes

NH.max <- filter(floral.max, native_H != 0)
hist(NH.max$native_H)

rm.fit <- NH.max$native_H
descdist(rm.fit, discrete=FALSE, boot=500)
#basically looks normal?
```

### 1. Testing Distributions
```{r}
N1_m <- glmmTMB(native_H ~ PLOT*SITE + (1|BLOCK/TRANSECT), family=Gamma, ziformula=~0, data=NH.max)
# NA function evaluation

N2_m <- glmmTMB(native_H ~ PLOT*SITE + (1|BLOCK/TRANSECT), family=gaussian(), ziformula=~0, data=NH.max)

N3_m <- glmmTMB(native_H ~ PLOT*SITE + (1|BLOCK/TRANSECT), family=poisson(), ziformula=~0, data=NH.max)

mods <- list(N1_m, N2_m, N3_m)
mod.table <- model.sel(mods)
mod.table

summary(N2_m)
#underdispersed
```
* Gaussian distribution is best fit

### 2. Optimal Random Effects Structure

Random Intercepts:
```{r}
N4_m <- glmmTMB(native_H ~ PLOT*SITE, family=gaussian(), ziformula=~0, data=NH.max)

mods <- list(N2_m, N4_m)
mod.table <- model.sel(mods)
mod.table
```
* model without random effects fits better, but going to keep B/T as per Bolker et al. 2009

Random Slopes:
```{r}
N8_m <- glmmTMB(native_H ~ PLOT*SITE + (1 + PLOT|BLOCK), family=gaussian(), ziformula=~0, data=NH.max)
# failed to converge

N9_m <- glmmTMB(native_H ~ PLOT*SITE + (1 + SITE|BLOCK), family=gaussian(), ziformula=~0, data=NH.max)
# failed to converge
```

### 3. Optimal Fixed Effects Structure

Fixed Effects to test:
* No F.E.
* PLOT
* SITE
* PLOT + SITE
* PLOT * SITE

```{r}
N0_m <- glmmTMB(native_H ~ (1|BLOCK/TRANSECT), family=gaussian(), ziformula=~0, data=NH.max)
# null model

N5_m <- glmmTMB(native_H ~ PLOT + (1|BLOCK/TRANSECT), family=gaussian(), ziformula=~0, data=NH.max)
# failed to converge

N6_m <- glmmTMB(native_H ~ SITE + (1|BLOCK/TRANSECT), family=gaussian(), ziformula=~0, data=NH.max)

N7_m <- glmmTMB(native_H ~ PLOT + SITE + (1|BLOCK/TRANSECT), family=gaussian(), ziformula=~0, data=NH.max)

#N2 is full model
mods <- list(N2_m, N0_m, N6_m, N7_m)
mod.table <- model.sel(mods)
mod.table
```
* model with PLOT*SITE is best fit

### 5. Quantifying importance of terms by comparing model without term to model with term

```{r}
#Importance of PLOT
# ~SITE vs ~PLOT+SITE (should this be PLOT*SITE?)
mods <- list(N6_m, N7_m)
mod.table <- model.sel(mods)
mod.table
#delta AIC = 22.53
anova(N6_m, N7_m)
# p < 0.01

#Importance of SITE
# no plot-only model

#Importance of PLOT*SITE
# ~PLOT*SITE vs PLOT+SITE
mods <- list(N2_m, N7_m)
mod.table <- model.sel(mods)
mod.table
# delta AIC = 19.62
anova(N2_m, N7_m)
# p < 0.001
```

### 6. Visualizing fixed and random effects

```{r}
#Dharma Diagnostics
simulationOutput <- simulateResiduals(fittedModel = N2_m, n = 250)

simulationOutput$scaledResiduals

plot(simulationOutput)

#Treatment, Climate, Week
plotResiduals(NH.max$PLOT, simulationOutput$scaledResiduals)

plotResiduals(NH.max$SITE, simulationOutput$scaledResiduals)

testUniformity(simulationOutput = simulationOutput)

testDispersion(N2_m)

testZeroInflation(simulationOutput)

#get values for random effects by random effect level
ranef(N2_m)
fixef(N2_m)

#Visualizing fixed effects
plot(allEffects(N2_m, partial.residuals = TRUE))
plot(allEffects(N2_m))

#dotplot visualizing the variance of the random effects
dotplot(ranef(N2_m, condVar=TRUE))
```

==============================================================================

## Total Abundance Model

Visualizations
```{r}
abund_plot <- floral.max %>% dplyr::rename(Site = SITE) %>% ddply(.(PLOT, Site), summarize, mean_se=list(mean_se(total_abund))) %>% unnest(mean_se) %>%
ggplot(aes(x=PLOT, y=y, color=Site))+
  geom_point (size=1.5
              #,position=position_dodge(width=0.5)
              )+
  geom_errorbar(aes(ymax=ymax, ymin=ymin), size=0.8, width=0.08
                #, position=position_dodge(width=0.5)
                ) +
  geom_path(aes(group=Site),
            #, position=position_dodge(width=0.5)
            linetype=2) +
  labs(x = "Plot", y = "Abundance") +
  theme_bw() +
  theme(axis.title=element_text(size=20), axis.text=element_text(size=14), legend.title = element_text(size=20), legend.text = element_text(size=14))
  
abund_plot
ggsave("abund_plot.png")

hist(floral.max$total_abund, breaks=50)

count(floral.max, total_abund==0)
#not ZI - each transect has at least one individual of any species

ggplot(floral.max.long, aes(x=max_abund))+
  geom_histogram(binwidth=100)+
  coord_cartesian(xlim=c(0,2500))
count(floral.max.long, max_abund==0)
#lots of zeroes - most species are NOT found in any given transect, each species occurs in 1/3 of transects on average

rm.fit <- floral.max$total_abund
descdist(rm.fit, discrete=FALSE, boot=500)
```

### 1. Testing Distributions
```{r}
#negative binomial (type 1)
A1_m <- glmmTMB(total_abund ~PLOT*SITE + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=nbinom1)

#negative binomial (type 2)
A2_m <- glmmTMB(total_abund ~ PLOT*SITE + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=nbinom2)

A3_m <- glmmTMB(total_abund ~ PLOT*SITE + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=gaussian())
# failed to converge

A4_m <- glmmTMB(total_abund ~ PLOT*SITE + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=poisson())

A5_m <- glmmTMB(total_abund ~ PLOT*SITE + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=Gamma)
#lots of NA function eval.

mods <- list(A1_m, A2_m, A4_m)
mod.table <- model.sel(mods)
mod.table

summary(A2_m)
chat <- 1.92
```
* type 2 NB is best

### 2. Testing Random Effects

Random Intercepts:
```{r}
A6_m <- glmmTMB(total_abund ~ PLOT*SITE, data=floral.max, ziformula=~0, family=nbinom2)

mods <- list(A2_m, A6_m)
mod.table <- model.sel(mod.table <- model.sel(mods, rank=QAIC, rank.args = list(chat=chat)))
mod.table
```
* Model without random effects fits better, but keeping B/T as per Bolker et al. 2009

Random Slopes: 
```{r}
A10_m <- glmmTMB(total_abund ~ PLOT*SITE + (1 + PLOT|BLOCK), data=floral.max, ziformula=~0, family=nbinom2)
# failed to converge

A11_m <- glmmTMB(total_abund ~ PLOT*SITE + (1 + SITE|BLOCK), data=floral.max, ziformula=~0, family=nbinom2)
# failed to converge
```

### 3. Testing Fixed Effects

Fixed Effects to test:
* No F.E.
* PLOT
* SITE
* PLOT + SITE
* PLOT * SITE

```{r}
A0_m <- glmmTMB(total_abund ~ (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=nbinom2)
# null model

A7_m <- glmmTMB(total_abund ~ PLOT + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=nbinom2)

A8_m <- glmmTMB(total_abund ~ SITE + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=nbinom2)

A9_m <- glmmTMB(total_abund ~ PLOT + SITE + (1|BLOCK/TRANSECT), data=floral.max, ziformula=~0, family=nbinom2)

# A2 is full model
mods <- list(A2_m, A0_m, A7_m, A8_m, A9_m)
mod.table <- model.sel(mod.table <- model.sel(mods, rank=QAIC, rank.args = list(chat=chat)))
mod.table
```
* full model is best fit

### 5. Quantifying importance of terms by comparing model without term to model with term

```{r}
#Importance of PLOT
# ~SITE vs ~PLOT+SITE (should this be PLOT*SITE?)
mods <- list(A8_m, A9_m)
mod.table <- model.sel(mods)
mod.table
#delta AIC = 25.53
anova(A8_m, A9_m)
# p < 0.001

#Importance of SITE
# ~PLOT vs ~PLOT+SITE (should this be PLOT*SITE?)
mods <- list(A7_m, A9_m)
mod.table <- model.sel(mods)
mod.table
#delta AIC = 58.49
anova(A7_m, A9_m)
# p < 0.001

#Importance of PLOT*SITE
# ~PLOT*SITE vs PLOT+SITE
mods <- list(A2_m, A9_m)
mod.table <- model.sel(mods)
mod.table
# delta AIC = 8.33 (weight=0.015)
anova(A2_m, A9_m)
# p < 0.01
```

### 6. Visualizing fixed and random effects

```{r}
#Dharma Diagnostics
simulationOutput <- simulateResiduals(fittedModel = A2_m, n = 250)

simulationOutput$scaledResiduals

plot(simulationOutput)

#Treatment, Climate, Week
plotResiduals(floral.max$PLOT, simulationOutput$scaledResiduals)

plotResiduals(floral.max$SITE, simulationOutput$scaledResiduals)

testUniformity(simulationOutput = simulationOutput)

testDispersion(A2_m)

testZeroInflation(simulationOutput)

#get values for random effects by random effect level
ranef(A2_m)
fixef(A2_m)

#Visualizing fixed effects
plot(allEffects(A2_m, partial.residuals = TRUE))
plot(allEffects(A2_m))

#dotplot visualizing the variance of the random effects
dotplot(ranef(A2_m, condVar=TRUE))
```

==============================================================================

## Single Species Proportion Model: Erodium (most abundant invasive BUT not found in mesic at all)
```{r}
floral.dat %>% filter(!is.nan(ERODIUM), SITE!="Mesic") %>% ddply(.(PLOT, SITE), summarize, mean_se=list(mean_se(ERODIUM/total_abund))) %>% unnest(mean_se) %>%
ggplot(aes(x=PLOT, y=y, color=SITE))+
  geom_point(position=position_dodge(width=0.5), size=1.5)+
  geom_errorbar(aes(ymax=ymax, ymin=ymin), size=0.8, width=0.15, position=position_dodge(width=0.5)) +
  geom_path(aes(group=SITE), position=position_dodge(width=0.5), linetype=2) +
  labs(title ="Erodium Abundance vs Plot", x = "PLOT", y = "Relative Abundance") +
  theme_bw()
```
* Erodium is much more prevalant in WC than in W or O, but only in Arid sites
* In intermediate sites, Erodium relative abundance is higher than in O or W Arid sites, but lower than in WC Arid sites.
* Furthermore, Erodium relative abundance is NOT affected by treatment in the Interm plots
* As climate becomes more arid, manangement practices will have an INCREASED effect on the prevalance of invasive species.

==============================================================================

# NMDS with transects averaged (each individual transect doesn't represent an independent community?)

```{r}
floral.avg <- floral.dat %>% group_by(SITE, PLOT, BLOCK) %>% summarise_at(vars(ERODIUM:BLUE.BUSH.PENSTAMEN), funs(mean(.))) %>% ungroup()

average_matrix <- floral.avg %>% 
  dplyr::select(ERODIUM:BLUE.BUSH.PENSTAMEN) %>% 
  add_column(C=paste(floral.avg$SITE, floral.avg$PLOT, floral.avg$BLOCK, sep="-")) %>% 
  column_to_rownames(var="C")

avgNMDS <- metaMDS(average_matrix, k=2, try=100)
#stress = ~0.0495, rule of thumb is <0.05 is ideal
stressplot(avgNMDS)
#non-metric R2 = 0.998
plot(avgNMDS, display = c("species"), choices = c(1, 2), type = "p", shrink = FALSE)

#extract species data from metaNMDS object for plotting in ggplot:
NMDS_sp_extract <- avgNMDS["species"]
NMDS_sp <- NMDS_sp_extract %>% data.frame() %>% rownames_to_column(var="species") %>% filter(!is.na(species.MDS1))

#new df for only the species that I want to label:
NMDS_sp["1", "species"] = "Erodium"
NMDS_sp["2", "species"] = "Triteleia"
NMDS_sp["3", "species"] = "Popcorn"
NMDS_sp["4", "species"] = "Mustard"
NMDS_sp["5", "species"] = "Gilia"
NMDS_sp["6", "species"] = "Blue Dick"
NMDS_sp["7", "species"] = "Yellow Pea"
NMDS_sp["8", "species"] = "Big Lupine"
NMDS_sp["11", "species"] = "Violet"
NMDS_sp["16", "species"] = "Buttercup"
NMDS_sp["21", "species"] = "Blue Bush Penstamen"

NMDS_sp_label <- slice(NMDS_sp, 1:8, 11, 16, 21)

NMDS <- data.frame(MDS1 = avgNMDS$points[,1], MDS2 = avgNMDS$points[,2], Site=floral.avg$SITE)

plot.new()
# only works when entire chunk is ran at once
ord<-ordiellipse(avgNMDS, floral.avg$SITE, display = "sites", 
                 kind = "se", conf = 0.95, label = T)
# ellipses show SE with 0.95 confidence interval

df_ell <- data.frame()
for(g in levels(NMDS$Site)){df_ell <- rbind(df_ell, cbind(as.data.frame(with(NMDS[NMDS$Site==g,],                 vegan:::veganCovEllipse(ord[[g]]$cov,ord[[g]]$center,ord[[g]]$scale))),Site=g))}

library(ggrepel)

NMDS.mean=aggregate(NMDS[,1:2],list(group=NMDS$Site),mean)

NMDS_plot_full <- ggplot(data = NMDS, aes(MDS1, MDS2)) +
  geom_point(aes(color=Site), shape = 3, size=2) +
  geom_point(data=NMDS_sp, aes(x=species.MDS1, y=species.MDS2), size=1) +
  geom_path(data=df_ell, aes(x=NMDS1, y=NMDS2,colour=Site), size=1, linetype=1) +
  annotate("text",x=NMDS.mean$MDS1,y=NMDS.mean$MDS2,label=NMDS.mean$group, size=7) +
  geom_text_repel(data=NMDS_sp_label, aes(x=species.MDS1, y=species.MDS2, label=species), size=5) +
  coord_cartesian(ylim=c(-0.8,0.7), xlim=c(-1.2,1.7)) +
  labs(title ="Community NMDS", size=30) +
  theme(plot.title = element_text(size = 20, face = "bold")) +
  theme(legend.title = element_text(size=20)) +
  theme(legend.text = element_text(size=15))

# each + represents one block/plot combination (WC-1, WC-2, WC-3, W-1, etc)
# each . represents a species

#use for progressive plotting in a presentation:
NMDS_plot_1 <- ggplot(data = NMDS, aes(MDS1, MDS2)) +
  geom_point(aes(color=Site), shape = 3) +
  coord_cartesian(ylim=c(-0.8,0.7), xlim=c(-1.2,1.7)) +
  labs(title ="Community NMDS")
  
  
NMDS_plot_2 <- ggplot(data = NMDS, aes(MDS1, MDS2)) +
  geom_point(aes(color=Site), shape = 3, size=2) +
  geom_path(data=df_ell, aes(x=NMDS1, y=NMDS2,color=Site), size=1, linetype=1) +
  annotate("text",x=NMDS.mean$MDS1,y=NMDS.mean$MDS2,label=NMDS.mean$group, size=7) +
  coord_cartesian(ylim=c(-0.8,0.7), xlim=c(-1.2,1.7)) +
  labs(title ="Community NMDS") +
  theme(plot.title = element_text(size = 20, face = "bold")) +
  theme(legend.title = element_text(size=20)) +
  theme(legend.text = element_text(size=15))

NMDS_plot_1
NMDS_plot_2
ggsave("NMDS_2.png", width=10, height=7)
NMDS_plot_full
ggsave("NMDS_full.png", width=10, height=7)
```
* Looks to be good separation between the three sites
* Mesic community is highly unique, interm and arid have more shared species
* Few species (blue dick and popcorn) are "generalists" based off of this visualization
* Could be an interesting way to visualize which species are associated with each treatment and how each plot of the same treatment group together- not sure how useful/applicable this is from a statistical perspective

# Conclusions/Observations of Interest
1. Invasive proportion increases with grazing guilds in arid and interm sites.
2. Introducing cattle does not produce a significant increase in proportion of invasives.
4. Arid sites have a much higher proportion of invasives than interm or mesic, and mesic is much lower than interm
3. Native and invasive species may have different responses to cattle grazing, but neither exhibit a strong response to exclusion of wildlife. Popcorn (native) has lower relative abundance in WC than in O or W, while Erodium (invasive) doesn't respond strongly to grazing.
4. Generally, the intermediate sites have highest Shannon diversity of the three climates, and W plots have the highest diversity among the treatments.
5. Similarily, native diversity is reduced by cattle introduction and wildlife exclusion.
6. Native biodiversity is much higher in the interm plots than the arid plots.
7. Total abundance is significantly higher (3x) in cattle and wildlife grazed plots than in the O plots. 
8. Total abundance is much lower in interm sites than in mesic or arid - maybe it isn't good conditions for either natives or invasives. Alternatively, it may be that it is a suitable habitat for both invasives and natives (interm has highest shannon diversity), and competition limits abundance of all species. 
9. Invasive proportion and Erodium relative abundance increase with grazing guilds present ONLY in Arid sites, and are NOT affected by grazing treatment in Interm sites. Increased aridity -> increased sensitivity to changes in grazing regimes