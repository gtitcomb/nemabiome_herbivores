summary(pglsmod)
comp.data = comparative.data(tree, as.data.frame(lambda_prev_data), names.col="phylo", warn.dropped=TRUE)
pglsmod = pgls(mean ~ 1, lambda="ML", data=comp.data)
summary(pglsmod)
richps = phylosig(tree, lrd, se=led, method="lambda", test=T)
plot(richps)
richps
richps = phylosig(tree, lrd, se=led, method="lambda", test=T)
plot(richps)
richps
install.packages("phylosignal")
library(phylosignal)
library(phylobase)
?phylo4d
phylo4d(tree, tip.data=lambda_rich_data)
??prune.tip
prune_taxa("Bos_taurus", tree)
phyloseq::prune_taxa("Bos_taurus", tree)
tree2 = phyloseq::prune_taxa(tree$tip.label!="Bos_taurus", tree)
phylo4d(tree2, tip.data=lambda_rich_data)
dim(lambda_rich_data)
p4dd = phylo4d(tree2, tip.data=lambda_rich_data)
phyloSignal(p4dd)
### Prevalence -glmmTMB ###
model_prevalence = glmmTMB(rd_2_qpcr_present ~ log(BM_KG)+ GS+ GUT +UNDERSTORY_PROP+ (1|MSW93_Binomial)+(1|Period), family="binomial", data=MPprevinfoMCMC)
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo))
phyloSignal(p4dd)
p4dd
??phylo4d
?phylo4d
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), merge.data=F)
p4dd
p4dd[-17:31,]
p4dd[-c(17:31),]
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), match.data=T)
p4dd
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), match.data=T, label.columniff = "phylo")
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), match.data=T, label.typecharacter = "column",label.columniff = "phylo")
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), label.typecharacter = "column",label.columniff = "phylo")
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), label.typecharacter =column, label.columniff = "phylo")
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), label.typecharacter ="label.column" label.columniff = "phylo")
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), label.typecharacter ="label.column", label.columniff = "phylo")
row.names(lambda_rich_data)
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean, phylo), rownamesAsLabels=T)
p4dd = phylo4d(tree2, tip.data=dplyr::select(lambda_rich_data, mean), rownamesAsLabels=T)
picante::phylosignal(lrd, tree)
picante::phylosignal(lpd, tree)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="K", test=T, nsim=2000)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T, nsim=2000)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T)
plot(prevps)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T)
plot(prevps)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T)
plot(prevps)
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T)
plot(prevps)
prevps
prevps = phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T)
plot(prevps)
prevps
prevps = replicate(10,phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T))
prevps
prevps = replicate(1000,phytools::phylosig(tree, lpd[-12],se = lped[-12], method="lambda", test=T))
prevps
str(prevps)
prevps[1]
prevps[2]
prevps[1:2]
prevps[1:5]
prevps[1:8]
prevps[1:9]
8*seq(1:1000)
8*seq(1:1000)+1
c(1,8*seq(1:999))
prevps[c(1,8*seq(1:999))]
prevps[c(1,(8*seq(1:999)+1)]
prevps[c(1,(8*seq(1:999))+1)]
unlist(prevps[c(1,(8*seq(1:999))+1)])
hist(unlist(prevps[c(1,(8*seq(1:999))+1)]))
plot(density((unlist(prevps[c(1,(8*seq(1:999))+1)]))))
richps = phylosig(tree, lpd, se=lped, method="lambda", test=T)
plot(richps)
richps = phylosig(tree, lrd, se=led, method="lambda", test=T)
plot(richps)
richps = phylosig(tree, lrd, se=led, method="lambda", test=T)
plot(richps)
richps = phylosig(tree, lrd, se=led, method="lambda", test=T)
plot(richps)
richps = phylosig(tree, lrd, se=led, method="lambda", test=T)
plot(richps)
?phylosig
phylosig(tree = tree, x=lrd, se=led, method="lambda", test=T)
phylosig(tree = tree, x=lrd, se=led, method="K", test=T)
phylosig(tree, lpd[-12],se = lped[-12], method="K", test=T)
lped
lped[12]=0.04 # based on others
prevps = replicate(1000,phytools::phylosig(tree, lpd,se = lped, method="lambda", test=T))
phylosig(tree, lpd,se = lped, method="K", test=T)
phylosig(tree, lpd, method="lambda", test=T)
phylosig(tree, lrd, method="lambda", test=T)
prd = phylosig(tree, lrd, method="lambda", test=T)
plot(prd)
prd = phylosig(tree, lrd, method="kappa", test=T)
prd = phylosig(tree, lrd, method="K", test=T)
plot(prds)
plot(prd)
prd
write.tree(tree, "tree_for_tyler.txt")
data.frame(mean_prev=lpd, se_prev=lped, mean_rich=lrd, se_rich=lpd)
write.csv(data.frame(mean_prev=lpd, se_prev=lped, mean_rich=lrd, se_rich=lpd), "phylosig_data_for_tyler.csv", row.names=F)
prd = phylosig(tree, lpd, method="K", test=T)
plot(prd)
prd = phylosig(tree, lpd, method="lambda", test=T)
plot(prd)
prd = phylosig(tree, lpd, method="K", test=T)
prd
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present, BM), funs(mean, sd,n())) %>%
ungroup()
names(MPprevinfoMCMC)
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present, BM_KG), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
lambda_prev_data
# save prevalence as the continuous variable
lpd = lambda_prev_data$BM_KG_mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
phylosig(tree, lpd, methood="lambda", test=T)
phylosig(tree, lpd, method="lambda", test=T)
# save prevalence as the continuous variable
lpd = log(lambda_prev_data$BM_KG_mean)
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
phylosig(tree, lpd, method="lambda", test=T)
lpd
phylosig(tree, lpd, method="lambda", test=T)
lambda_prev_data$BM_KG_mean
phylosig(tree, lpd, method="K", test=T)
# save prevalence as the continuous variable
lpd = (lambda_prev_data$BM_KG_mean)
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
phylosig(tree, lpd, method="K", test=T)
# save prevalence as the continuous variable
lpd = log(lambda_prev_data$rd_2_qpcr_present_mean/(1-lambda_prev_data$rd_2_qpcr_present_mean))
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
phylosig(tree, lpd[-12], method="K", test=T)
phylosig(tree, lpd[-12], method="lambda", test=T)
write.csv(data.frame(mean_prev=lpd, se_prev=lped, mean_rich=lrd, se_rich=lpd), "phylosig_data_for_tyler.csv")
MPprevinfoMCMC$rd_2_qpcr_present
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present, BM_KG), funs(mean, sd,n())) %>%
ungroup()
lambda_prev_data
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$rd_2_qpcr_present_mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
# add standard errors
lped = lambda_prev_data$sd/sqrt(lambda_prev_data$n)
sqrt(lambda_prev_data$n)
lambda_prev_data$sd
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present, BM_KG), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$rd_2_qpcr_present_mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
lambda_prev_data
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$rd_2_qpcr_present_mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
lambda_prev_data$rd_2_qpcr_present_mean
# save prevalence as the continuous variable
lpd = lambda_prev_data$mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
# add standard errors
lped = lambda_prev_data$sd/sqrt(lambda_prev_data$n)
names(lped) = row.names(lambda_prev_data)
phylosig(tree, lpd,se = lped, method="lambda", test=T)
phylosig(tree, lpd[-12],se = lped[12], method="lambda", test=T)
lped
lpd
lpd[-12]
phytools::phylosig(tree, lpd[-12],se = lped[12], method="lambda", test=T)
tree
read.tree(tree)
tree = read.tree(here("data/new_mammal_tree_pruned.newick"))
phytools::phylosig(tree, lpd[-12],se = lped[12], method="lambda", test=T)
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
lpd
log(0.83/(1-0.83))
log(0.85/0.15)
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
names(lpd)
# add standard errors
lped = lambda_prev_data$sd/sqrt(lambda_prev_data$n)
names(lped) = row.names(lambda_prev_data)
phytools::phylosig(tree, lpd, method="lambda", test=T)
cbind(lpd, lped)
write.csv(cbind(lpd, lped))
write.csv(cbind(lpd, lped),"prev.csv")
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(richness), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
# add standard errors
lped = lambda_prev_data$sd/sqrt(lambda_prev_data$n)
names(lped) = row.names(lambda_prev_data)
lped
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(richness), funs(mean, sd,n())) %>%
ungroup()
lambda_prev_data
# take data to species level
lambda_prev_data = MPrichinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(richness), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
# add standard errors
lped = lambda_prev_data$sd/sqrt(lambda_prev_data$n)
names(lped) = row.names(lambda_prev_data)
lped
phytools::phylosig(tree, lrd, method="lambda", test=T)
write.csv(cbind(lrd, lped))
write.csv(cbind(lrd, lped),"rich.csv")
phylosig(tree, lrd, se=led)
phylosig(tree, lrd, se=led, test=T)
phylosig(tree, lrd, se=led, test=T, method="K")
phylosig(tree, lrd, se=led, test=T, method="lambda")
phylosig(tree, lpd, se=lped, test=T, method="lambda")
phylosig(tree, lpd, se=lped, test=T, method="K")
phylosig(tree, lpd, test=T, method="K")
phylosig(tree, lpd, test=T, method="Klambda")
phylosig(tree, lpd, test=T, method="lambda")
library(phylosignal)
??phylosignal
require(ape)
require(phylobase)
data(navic)
tipData(navic)$rand <- rnorm(17)
tipData(navic)$BM <- rTraitCont(as(navic, "phylo"))
phyloSignal(navic)
navic
head(navic)
phylo4d(lambda_prev_data, tree)
?phylo4d
phylo4d(tree, lambda_prev_data)
phylo4d(tree, lambda_prev_data, tip.label="phylo")
phylo4d(tree, tip.data=lambda_prev_data, tip.label="phylo")
phylo4d(tree, tip.data=lambda_prev_data,
check.node.labels="drop", label.typecharacter="column",
label.columniff="phylo")
phylo4d(tree, tip.data=lambda_prev_data,match.data=T,
check.node.labels="drop", label.typecharacter="column",
label.columniff="phylo")
phylo4d(tree, tip.data=lambda_prev_data,match.data=T)
row.names(lambda_prev_data)
match(tree$tip.label, row.names(lambda_prev_data))
tree$tip.label
# format tree
tree = read.tree(here("data/new_mammal_tree_pruned.newick"))
# rename some tips
tree$tip.label[which(tree$tip.label=="Nanger_granti")]="Gazella_granti"
tree$tip.label[which(tree$tip.label=="Tragelaphus_oryx")]="Taurotragus_oryx"
tree$tip.label[which(tree$tip.label=="Equus_africanus")]="Equus_asinus"
tree$tip.label[which(tree$tip.label=="Equus_quagga")]="Equus_burchellii"
#remove unused tips
tree = drop.tip(tree, c("Tragelaphus_scriptus","Kobus_ellipsiprymnus"))
match(tree$tip.label, row.names(lambda_prev_data))
head(navic)
match(tree$tip.label, row.names(lambda_prev_data))
lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data))]
lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2 = lpd2[-10,]
phylo4d(tree, tip.data=lpd2)
lpd2=as.data.frame(lpd2)
phylo4d(tree, tip.data=lpd2)
tree$tip.label
lpd2
lpd2$phylo[16]
tree$tip.label[16]
tree$tip.label[1]
tree$tip.label[17]
tree = drop.tip(tree, c("Bos taurus"))
tree
tree$tip.label[16]
tree$tip.label
tree = drop.tip(tree, c("Bos taurus"))
??drop.tip
tree = ape::drop.tip(tree, c("Bos taurus"))
tree$tip.label
tree = ape::drop.tip(tree, c("Bos_taurus"))
tree$tip.label
phylo4d(tree, tip.data=lpd2)
p4ddata = phylo4d(tree, tip.data=lpd2)
phylosignal(p4data)
phyloSignal(p4data)
phyloSignal(p4ddata)
rTraitCont(as(p4ddata, "phylo"))
p4ddata
tipData(p4ddata)$prev = rTraitCont(as(p4ddata, "phylo"))
phyloSignal(p4ddata)
p4ddata
head(navic)
lpd2
p4ddata = phylo4d(tree, tip.data=lpd2[,2])
p4ddata
phyloSignal(p4ddata)
# take data to species level
lambda_prev_data = MPrichinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
# add standard errors
lped = lambda_prev_data$sd/sqrt(lambda_prev_data$n)
names(lped) = row.names(lambda_prev_data)
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2 = lpd2[-10,]
lpd2 = as.data.frame(lpd2)
tree = ape::drop.tip(tree, c("Bos_taurus"))
p4ddata = phylo4d(tree, tip.data=lpd2[,2])
tree
tree = read.tree(here("data/new_mammal_tree_pruned.newick"))
# rename some tips
tree$tip.label[which(tree$tip.label=="Nanger_granti")]="Gazella_granti"
tree$tip.label[which(tree$tip.label=="Tragelaphus_oryx")]="Taurotragus_oryx"
tree$tip.label[which(tree$tip.label=="Equus_africanus")]="Equus_asinus"
tree$tip.label[which(tree$tip.label=="Equus_quagga")]="Equus_burchellii"
#remove unused tips
tree = drop.tip(tree, c("Tragelaphus_scriptus","Kobus_ellipsiprymnus"))
tree = ape::drop.tip(tree, c("Bos_taurus"))
p4ddata = phylo4d(tree, tip.data=lpd2[,2])
tree
lpd2
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
# save prevalence as the continuous variable
lpd = lambda_prev_data$mean
# needs to be a named vector
names(lpd) = row.names(lambda_prev_data)
# add standard errors
lped = lambda_prev_data$sd/sqrt(lambda_prev_data$n)
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2
lpd2 = as.data.frame(lpd2)
p4ddata = phylo4d(tree, tip.data=lpd2[,2])
phyloSignal(p4ddata)
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(BM_KG), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2
p4ddata = phylo4d(tree, tip.data=lpd2[,2])
phyloSignal(p4ddata)
p4ddata = phylo4d(tree, tip.data=log(lpd2[,2]))
phyloSignal(p4ddata)
tip.data
log(lpd2[,2])
phyloSignal(p4ddata)
p4ddata = phylo4d(tree, tip.data=(lpd2[,2]))
phyloSignal(p4ddata)
barplot.phylo4d(p4ddata)
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(richness), funs(mean, sd,n())) %>%
ungroup()
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2 = as.data.frame(lpd2)
p4ddata = phylo4d(tree, tip.data=(lpd2[,2]))
phyloSignal(p4ddata)
barplot.phylo4d(p4ddata)
# take data to species level
lambda_prev_data = MPrichinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(richness), funs(mean, sd,n())) %>%
ungroup()
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
p4ddata = phylo4d(tree, tip.data=(lpd2[,2]))
phyloSignal(p4ddata)
barplot.phylo4d(p4ddata)
lambda_prev_data = MPrichinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(richness), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
lambda_prev_data
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2 = as.data.frame(lpd2)
p4ddata = phylo4d(tree, tip.data=(lpd2[,2]))
phyloSignal(p4ddata)
barplot.phylo4d(p4ddata)
?barplot.phylo4d
barplot.phylo4d(p4ddata, tree.ladderize=T)
barplot.phylo4d(p4ddata, tree.ladderize=T, scale=F, center=F)
barplot.phylo4d(p4ddata, tree.ladderize=T, scale=T, center=F)
barplot.phylo4d(p4ddata, tree.ladderize=T, scale=F, center=F)
# take data to species level
lambda_prev_data = MPprevinfoMCMC %>%
group_by(phylo) %>%
summarize_at(vars(rd_2_qpcr_present), funs(mean, sd,n())) %>%
ungroup()
# assign rownames
row.names(lambda_prev_data)=lambda_prev_data$phylo
lpd2 = lambda_prev_data[match(tree$tip.label, row.names(lambda_prev_data)),]
lpd2 = as.data.frame(lpd2)
p4ddata = phylo4d(tree, tip.data=(lpd2[,2]))
phyloSignal(p4ddata)
barplot.phylo4d(p4ddata, tree.ladderize=T, scale=F, center=F)
