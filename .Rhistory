# use group mean
MPprevinfoMCMC[which(is.na(MPprevinfoMCMC$UNDERSTORY_PROP)),]$UNDERSTORY_PROP=MPprevinfoMCMC[which(is.na(MPprevinfoMCMC$UNDERSTORY_PROP)),]$UNDERSTORY_SP_MEAN
dim(MPprevinfoMCMC)
tab = tab2
# type in the threshold as a character to use for saving plots correctly
threshold_used = "0.02"
tab = tab %>%
filter(Species !="Hybrid zebra") %>%
filter(Species != "Waterbuck") %>%
filter(Sample != "MRC_17_HIP_93")
# sample sizes and facts
# 1. qPCR n
# plus 27 sheep and goats
fact_1 = tab %>%
filter(rd_2_qpcr_conducted=="Y") %>%
nrow() + 27
# 2. number with Ct < 35
fact_2 = tab %>%
filter(rd_2_qpcr_present=="Y") %>%
nrow()
# 3. number selected for metabarcoding from qPCR
fact_3 = tab %>%
filter(rd_2_qpcr_present=="Y")%>%
filter(rd2_sequenced == "Y") %>%
nrow()
# 4. number re-amplified and used in metabarcoding
fact_4 = tab %>%
filter(rd2_sequenced=="Y") %>%
nrow()
# 5. mean sample read depth after filters
fact_5 = mean(tab$Filtered_Reads, na.rm=T)
# 6. number of samples that dropped out
fact_6 = tab %>%
filter(rd2_sequenced=="Y") %>%
filter(is.na(mOTU_1)==T) %>%
nrow()
# 7 final mOTU table dimensions
fact_7 = tab %>%
filter(is.na(mOTU_1)==F) %>%
select(mOTU_1:mOTU_94) %>%
dim(.)
fact_8 = tab %>%
filter(Species == "Cattle") %>%
nrow()
fact_9 = tab %>%
filter(is.na(mOTU_1)==F) %>%
filter(Species == "Cattle") %>%
nrow()
# set animal colors based on alphabet
levels(as.factor(tab$Species))
animal_colors=c("darkorchid4","goldenrod1","blueviolet", "deepskyblue3", "hotpink",  "dodgerblue","green3",  "goldenrod","dodgerblue3", "maroon1",  "deepskyblue2", "greenyellow", "dodgerblue4", "lightskyblue","lightskyblue1", "maroon3", "green4", "cyan2")
tab_present = tab %>%
filter(is.na(mOTU_1)==F)
richgraph = tab_present %>%
mutate(Species = recode(Species, `Grevys zebra` = "Grevy's zebra", `Grants gazelle`="Grant's gazelle", `DikDik`="Dik-dik")) %>%
ggplot(aes(x=reorder(Species,-richness,na.rm=T), y=richness))+
geom_jitter(width=0.01,height=0.3, alpha=0.5, aes(color=Species))+
geom_boxplot(aes(fill=Species), color="gray50",outlier.shape=NA)+
guides(fill="none",col="none")+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
scale_fill_manual(values=animal_colors)+
scale_color_manual(values=animal_colors)+
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0))+
scale_y_continuous(limits = c(0,(max(tab_present$richness)+1)))+
labs(x="Host Species",y="Richness")
richgraph
# calculate prevalence with correct errorbars
tab_prev = tab %>%
mutate_at(vars(rd_2_qpcr_present), funs(ifelse(.=="Y",1,0))) %>%
group_by(Species) %>%
summarize_at(vars(rd_2_qpcr_present), funs(n=n(), pos=sum(.))) %>%
ungroup()
tab_prev = binom.confint(tab_prev$pos, tab_prev$n, methods="wilson")%>%
cbind(tab_prev[,1])
prevgraph = tab_prev %>%
mutate(Species = recode(Species, `Grevys zebra` = "Grevy's zebra", `Grants gazelle`="Grant's gazelle", `DikDik`="Dik-dik")) %>%
ggplot(aes(x=reorder(Species, -mean), y=mean))+
geom_point(aes(color=Species), size=2)+
geom_errorbar(aes(ymin=lower, ymax=upper, color=Species), size=1.2)+
guides(col="none")+
theme_bw(base_size = 16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
scale_color_manual(values=animal_colors)+
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0))+
scale_y_continuous(limits=c(0,1))+
labs(x="Host Species", y="Prevalence")
prevgraph
# Richness and Prevalence comparison
compare = tab_present %>%
group_by(Species) %>%
summarize_at(vars(richness), funs(mean)) %>%
arrange(desc(richness)) %>%
left_join(tab_prev)
temp = cor.test(compare$mean, compare$richness, method = "spearman")
result_1 = unlist(temp) %>% as.data.frame()
prev_rich_graph = gridExtra::grid.arrange(prevgraph, richgraph, ncol=2)
### qPCR value
head(tab)
ggplot(tab, aes(x=reorder(Species,rd_2_qpcr_mean_ct), y=rd_2_qpcr_mean_ct))+
geom_boxplot(aes(fill=Species))+
scale_fill_manual(values=animal_colors)+
guides(fill="none")+
theme_bw(base_size = 14)+
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0))
## Prevalence #################
# Test prevalence
MP_prev = tab %>%
mutate_at(vars(rd_2_qpcr_present), funs(ifelse(.=="Y",1,0)))
# fit logistic with species
MPprev_mod = glmmTMB(rd_2_qpcr_present ~ Species, data=MP_prev, family="binomial")
# residuals
testResiduals(simulateResiduals(MPprev_mod))
# assess pct variation
temp = car::Anova(MPprev_mod)
as.data.frame(performance::r2_tjur(MPprev_mod))
# save results and sample size
result_2 = cbind(as.data.frame(temp), data.frame(R2 = performance::r2_tjur(MPprev_mod)))
dim(MP_prev)
## Richness ################
# fit model
dim(tab_present)
MPsp = glmmTMB(richness ~ Species, family="poisson", data=tab_present)
# diagnostics
testResiduals(simulateResiduals(MPsp))
temp = car::Anova(MPsp)
# results
y_hat = predict(MPsp, type="response")
y_bar = mean(tab_present$richness)
rtemp = 1-sum((tab_present$richness-y_hat)^2)/sum((tab_present$richness-y_bar)^2)
result_3 = cbind(as.data.frame(temp), data.frame(R2 = rtemp))
## Setup ##
# Fit a model with a species term
tab$phylo = tab$MSW93_Binomial
MP_prev$phylo = MP_prev$MSW93_Binomial
tab_present$phylo = tab_present$MSW93_Binomial
# format tree
tree = read.tree(here("data/new_mammal_tree_pruned.newick"))
# rename some tips
tree$tip.label[which(tree$tip.label=="Nanger_granti")]="Gazella_granti"
tree$tip.label[which(tree$tip.label=="Tragelaphus_oryx")]="Taurotragus_oryx"
tree$tip.label[which(tree$tip.label=="Equus_africanus")]="Equus_asinus"
tree$tip.label[which(tree$tip.label=="Equus_quagga")]="Equus_burchellii"
# remove unused tips
tree = drop.tip(tree, c("Tragelaphus_scriptus","Kobus_ellipsiprymnus"))
# format phylo for use with MCMCglmm
inv.phylo = inverseA(tree, nodes="TIPS", scale=T)
# with phylogeny
## inverse wishart
prior_pois = list(G=list(G1=list(V=1,nu=0.002),
G2=list(V=1,nu=0.002),
G3=list(V=1,nu=0.002)),
R=list(V=1,nu=0.002))
# without phylogeny
## inverse wishart
prior_pois2 = list(G=list(G1=list(V=1,nu=0.002),
G2=list(V=1,nu=0.002)),
R=list(V=1,nu=0.002))
# format data correctly
MPrichinfoMCMC = as.data.frame(tab_present)
MPrichinfoMCMC$animal = MPrichinfoMCMC$Sample_ID
MPrichinfoMCMC$phylo = MPrichinfoMCMC$MSW93_Binomial
MPrichinfoMCMC = as.data.frame(MPrichinfoMCMC)
# exclude cattle because they were treated
MPrichinfoMCMC = MPrichinfoMCMC[-which(MPrichinfoMCMC$Species=="Cattle"),]
# use group mean for missing sample-level data for understory
MPrichinfoMCMC[which(is.na(MPrichinfoMCMC$UNDERSTORY_PROP)),]$UNDERSTORY_PROP=MPrichinfoMCMC[which(is.na(MPrichinfoMCMC$UNDERSTORY_PROP)),]$UNDERSTORY_SP_MEAN
dim(MPrichinfoMCMC)
library(picante)
library(car)
library(DHARMa)
library(MCMCglmm)
library(glmmTMB)
library(tidyverse)
library(adegenet)
library(emmeans)
library(ggtree)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("../")
library(here)
########
# Import files
# tree files
treeNJ1 = read.tree(here("data/treeNJ_K80_gamma_table_1.tree"))
tipdata1 = read.csv(here("data/nem_taxa_table_1.csv"))
treeNJ2 = read.tree(here("data/treeNJ_K80_gamma_table_2.tree"))
tipdata2 = read.csv(here("data/nem_taxa_table_2.csv"))
# RRA files
table_1 = read.csv(here("data/RRA_table_1.csv"))
table_2 = read.csv(here("data/RRA_table_2.csv"))
# host files
hosts = read.csv(here("data/host_metadata.csv"))
tree = read.tree(here("data/new_mammal_tree_pruned.newick"))
# decide which dataframe
treeNJ = treeNJ1
data_table = table_1
tipdata = tipdata1
threshold_used = "0.002"
# order the tipdata correctly
tipdata = tipdata[match(treeNJ$tip.label, tipdata$seq_id),]
# ladderize
phylo_nems=ladderize(treeNJ)
# rename tips to the mOTU
phylo_nems$tip.label = tipdata$mOTU
# find end label
end = dim(data_table)[2]-2
# calculate PD
set.seed(123)
PDData_sum = data.frame(data_table[,c(end+1,end+2)], ses.pd(data_table[,1:end], tree=phylo_nems, include.root = F, runs=100, null.model="richness"))
# add host data
PDData_sum = left_join(PDData_sum, hosts, by=c("Sample"="Sample_ID"))
PDData_sum %>%
filter(is.na(pd.obs)) %>%
group_by(Species) %>%
summarize(n())
# exclude NA
PDData_sum = PDData_sum %>%
filter(is.na(pd.obs)==F)
# Exploratory Plots:
# relationship between SR and PD
ggplot(PDData_sum, aes(x=ntaxa, y=pd.obs))+
geom_point(aes(col=Species))+
geom_smooth(aes(col=Species),method="lm", formula=y~log(x), se=F)+
facet_wrap(~Species)
# reassign gut type
PDData_sum = PDData_sum %>%
mutate_at(vars(GUT), funs(ifelse(.=="FG*", "FG", .)))
animal_colors=c("darkorchid4","goldenrod1","blueviolet", "deepskyblue3", "hotpink",  "dodgerblue","green3",  "goldenrod","dodgerblue3", "maroon1",  "deepskyblue2", "greenyellow", "dodgerblue4", "lightskyblue","lightskyblue1", "maroon3", "green4", "cyan2")
pdz = ggplot(PDData_sum, aes(x=GUT, y=pd.obs.z))+
geom_hline(yintercept=-2, linetype="dotted")+
geom_hline(yintercept = 2, linetype="dotted")+
geom_boxplot(fill=NA, col="gray50", size=1)+
geom_boxplot(data=PDData_sum, aes(x=GUT, y=pd.obs.z, col=Species), size=0.8, position=position_dodge(width=0.5), width=0.25, alpha=0.6)+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(x="Gut Type", y="PD Z-Value")+
scale_color_manual(values=c(animal_colors))+
guides(col="none")
pdz
pd = ggplot(PDData_sum, aes(x=GUT, y=pd.obs))+
geom_boxplot(fill=NA, col="gray50", size=1)+
geom_boxplot(data=PDData_sum, aes(x=GUT, y=pd.obs, col=Species), size=0.8, position=position_dodge(width=0.5), width=0.25, alpha=0.6)+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(x="Diet", y="Faith's PD")+
scale_color_manual(values=c(animal_colors[-13]))+
#facet_wrap(~Fermentation, scales="free_x")+
guides(color="none")
pd
pdplot = gridExtra::grid.arrange(pd, pdz, ncol=2)
pdplot_sp = PDData_sum %>%
mutate(Species = recode(Species, `Grevys zebra` = "Grevy's zebra", `Grants gazelle`="Grant's gazelle", `DikDik`="Dik-dik")) %>%
ggplot(aes(x=reorder(Species,-pd.obs,na.rm=T), y=pd.obs))+
geom_jitter(width=0.01,height=0.01, alpha=0.5, aes(color=Species))+
geom_boxplot(aes(fill=Species), color="gray50",outlier.shape=NA)+
guides(fill="none",col="none")+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
scale_color_manual(values=(animal_colors))+
scale_fill_manual(values=(animal_colors))+
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0))+
labs(x="Host Species",y="PD")
pdplot_sp
# total PD by species
PD_spmod = glm(pd.obs~ Species, data=PDData_sum, family="gaussian")
summary(PD_spmod)
Anova(PD_spmod)
# results
y_hat = predict(PD_spmod, type="response")
y_bar = mean(PDData_sum$pd.obs)
PDtemp = 1-sum((PDData_sum$pd.obs-y_hat)^2)/sum((PDData_sum$pd.obs-y_bar)^2)
PDtemp
performance::r2(PD_spmod)
hist(PDData_sum$pd.obs) # data are bounded at 0
qqnorm(residuals(PD_spmod))
testResiduals(simulateResiduals(PD_spmod))
result_1 = data.frame(car::Anova(PD_spmod), R2 = performance::r2(PD_spmod)[1])
empd = emmeans(PD_spmod, ~Species)
# PD diff by species
PD_spmodz = glm(pd.obs.z ~ Species, data=PDData_sum, family="gaussian")
summary(PD_spmodz)
Anova(PD_spmodz)
DHARMa::testResiduals(simulateResiduals(PD_spmodz))
performance::r2(PD_spmodz)
# results
y_hat = predict(PD_spmodz, type="response")
y_bar = mean(PDData_sum$pd.obs.z)
PDztemp = 1-sum((PDData_sum$pd.obs.z-y_hat)^2)/sum((PDData_sum$pd.obs.z-y_bar)^2)
PDztemp
result_2 = data.frame(car::Anova(PD_spmodz), R2 = PDztemp)
empdz= emmeans(PD_spmodz, ~Species)
pdzplot_sp = PDData_sum %>%
mutate(Species = recode(Species, `Grevys zebra` = "Grevy's zebra", `Grants gazelle`="Grant's gazelle", `DikDik`="Dik-dik")) %>%
ggplot(aes(x=reorder(Species,-pd.obs.z,na.rm=T), y=pd.obs.z))+
geom_hline(yintercept = -2, linetype="dotted")+
geom_jitter(width=0.01,height=0.01, alpha=0.5, aes(color=Species))+
geom_boxplot(aes(fill=Species), color="gray50",outlier.shape=NA)+
guides(fill="none",col="none")+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
scale_color_manual(values=animal_colors)+
scale_fill_manual(values=animal_colors)+
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0))+
annotate(geom="text", x=4.5, y=-5.75, label="Lower than expected PD")+
labs(x="Host Species",y="sesPD")
pdspplot = gridExtra::grid.arrange(pdplot_sp,pdzplot_sp,ncol=2)
# Models at the species-level
# Setup
# format mammal tree
tree$tip.label[which(tree$tip.label=="Nanger_granti")]="Gazella_granti"
tree$tip.label[which(tree$tip.label=="Tragelaphus_oryx")]="Taurotragus_oryx"
tree$tip.label[which(tree$tip.label=="Equus_africanus")]="Equus_asinus"
tree$tip.label[which(tree$tip.label=="Equus_quagga")]="Equus_burchellii"
#remove unused tips
tree = drop.tip(tree, c("Tragelaphus_scriptus","Kobus_ellipsiprymnus"))
inv.phylo = inverseA(tree, nodes="TIPS", scale=T)
# using default normal for B, inverse wishart for variance parts
prior_normal = list(G=list(G1=list(V=1,nu=0.002),
G2=list(V=1,nu=0.002),
G3=list(V=1, nu=0.002)),
R=list(V=1,nu=0.002))
prior_normal2 = list(G=list(G1=list(V=1,nu=0.002),
G2=list(V=1,nu=0.002)),
R=list(V=1,nu=0.002))
PDMCMC = PDData_sum %>%
filter(is.na(pd.obs.p)==F)
PDMCMC$phylo = PDMCMC$MSW93_Binomial
# exclude cattle
PDMCMC2 = PDMCMC[-which(PDMCMC$Species=="Cattle"),]
# replace missing values with species average for understory
PDMCMC2[which(is.na(PDMCMC2$UNDERSTORY_PROP)),]$UNDERSTORY_PROP=PDMCMC2[which(is.na(PDMCMC2$UNDERSTORY_PROP)),]$UNDERSTORY_SP_MEAN
dim(PDMCMC2)
PDMCMC
dim(PDMCMC)
dim(PDData_sum)
PDMCMC = PDData_sum %>%
filter(is.na(pd.obs.p)==F)
# exclude cattle
PDMCMC2 = PDMCMC[-which(PDMCMC$Species=="Cattle"),]
dim(PDMCMC2)
PDMCMC2 %>% filter(which(is.na(pd.obs.p)))
PDMCMC2 %>% filter(which(is.na(pd.obs.p)==T))
PDMCMC2$pd.obs.p
# decide which dataframe
treeNJ = treeNJ2
data_table = table_2
tipdata = tipdata2
threshold_used = "0.02"
# order the tipdata correctly
tipdata = tipdata[match(treeNJ$tip.label, tipdata$seq_id),]
myPal = colorRampPalette(c("red","yellow","green","blue"))
# ladderize
phylo_nems=ladderize(treeNJ)
# rename tips to the mOTU
phylo_nems$tip.label = tipdata$mOTU
# find end label
end = dim(data_table)[2]-2
# calculate PD
set.seed(123)
PDData_sum = data.frame(data_table[,c(end+1,end+2)], ses.pd(data_table[,1:end], tree=phylo_nems, include.root = F, runs=100, null.model="richness"))
# singletons are given NA
# add host data
PDData_sum = left_join(PDData_sum, hosts, by=c("Sample"="Sample_ID"))
PDData_sum %>%
filter(is.na(pd.obs)) %>%
group_by(Species) %>%
summarize(n())
# exclude NA
PDData_sum = PDData_sum %>%
filter(is.na(pd.obs)==F)
# Exploratory Plots:
# relationship between SR and PD
ggplot(PDData_sum, aes(x=ntaxa, y=pd.obs))+
geom_point(aes(col=Species))+
geom_smooth(aes(col=Species),method="lm", formula=y~log(x), se=F)+
facet_wrap(~Species)
# reassign gut type
PDData_sum = PDData_sum %>%
mutate_at(vars(GUT), funs(ifelse(.=="FG*", "FG", .)))
animal_colors=c("darkorchid4","goldenrod1","blueviolet", "deepskyblue3", "hotpink",  "dodgerblue","green3",  "goldenrod","dodgerblue3", "maroon1",  "deepskyblue2", "greenyellow", "dodgerblue4", "lightskyblue","lightskyblue1", "maroon3", "green4", "cyan2")
pdz = ggplot(PDData_sum, aes(x=GUT, y=pd.obs.z))+
geom_hline(yintercept=-2, linetype="dotted")+
geom_hline(yintercept = 2, linetype="dotted")+
geom_boxplot(fill=NA, col="gray50", size=1)+
geom_boxplot(data=PDData_sum, aes(x=GUT, y=pd.obs.z, col=Species), size=0.8, position=position_dodge(width=0.5), width=0.25, alpha=0.6)+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(x="Gut Type", y="PD Z-Value")+
scale_color_manual(values=c(animal_colors))+
guides(col="none")
pdz
pd = ggplot(PDData_sum, aes(x=GUT, y=pd.obs))+
geom_boxplot(fill=NA, col="gray50", size=1)+
geom_boxplot(data=PDData_sum, aes(x=GUT, y=pd.obs, col=Species), size=0.8, position=position_dodge(width=0.5), width=0.25, alpha=0.6)+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(x="Diet", y="Faith's PD")+
scale_color_manual(values=c(animal_colors[-13]))+
#facet_wrap(~Fermentation, scales="free_x")+
guides(color="none")
pd
pdplot = gridExtra::grid.arrange(pd, pdz, ncol=2)
pdplot_sp = PDData_sum %>%
mutate(Species = recode(Species, `Grevys zebra` = "Grevy's zebra", `Grants gazelle`="Grant's gazelle", `DikDik`="Dik-dik")) %>%
ggplot(aes(x=reorder(Species,-pd.obs,na.rm=T), y=pd.obs))+
geom_jitter(width=0.01,height=0.01, alpha=0.5, aes(color=Species))+
geom_boxplot(aes(fill=Species), color="gray50",outlier.shape=NA)+
guides(fill="none",col="none")+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
scale_color_manual(values=(animal_colors))+
scale_fill_manual(values=(animal_colors))+
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0))+
labs(x="Host Species",y="PD")
pdplot_sp
# total PD by species
PD_spmod = glm(pd.obs~ Species, data=PDData_sum, family="gaussian")
summary(PD_spmod)
Anova(PD_spmod)
# results
y_hat = predict(PD_spmod, type="response")
y_bar = mean(PDData_sum$pd.obs)
PDtemp = 1-sum((PDData_sum$pd.obs-y_hat)^2)/sum((PDData_sum$pd.obs-y_bar)^2)
PDtemp
performance::r2(PD_spmod)
hist(PDData_sum$pd.obs) # data are bounded at 0
qqnorm(residuals(PD_spmod))
testResiduals(simulateResiduals(PD_spmod))
result_1 = data.frame(car::Anova(PD_spmod), R2 = performance::r2(PD_spmod)[1])
empd = emmeans(PD_spmod, ~Species)
# PD diff by species
PD_spmodz = glm(pd.obs.z ~ Species, data=PDData_sum, family="gaussian")
summary(PD_spmodz)
Anova(PD_spmodz)
DHARMa::testResiduals(simulateResiduals(PD_spmodz))
performance::r2(PD_spmodz)
# results
y_hat = predict(PD_spmodz, type="response")
y_bar = mean(PDData_sum$pd.obs.z)
PDztemp = 1-sum((PDData_sum$pd.obs.z-y_hat)^2)/sum((PDData_sum$pd.obs.z-y_bar)^2)
PDztemp
result_2 = data.frame(car::Anova(PD_spmodz), R2 = PDztemp)
empdz= emmeans(PD_spmodz, ~Species)
pdzplot_sp = PDData_sum %>%
mutate(Species = recode(Species, `Grevys zebra` = "Grevy's zebra", `Grants gazelle`="Grant's gazelle", `DikDik`="Dik-dik")) %>%
ggplot(aes(x=reorder(Species,-pd.obs.z,na.rm=T), y=pd.obs.z))+
geom_hline(yintercept = -2, linetype="dotted")+
geom_jitter(width=0.01,height=0.01, alpha=0.5, aes(color=Species))+
geom_boxplot(aes(fill=Species), color="gray50",outlier.shape=NA)+
guides(fill="none",col="none")+
theme_bw(base_size=16)+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
scale_color_manual(values=animal_colors)+
scale_fill_manual(values=animal_colors)+
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0))+
annotate(geom="text", x=4.5, y=-5.75, label="Lower than expected PD")+
labs(x="Host Species",y="sesPD")
pdspplot = gridExtra::grid.arrange(pdplot_sp,pdzplot_sp,ncol=2)
# Models at the species-level
# Setup
# format mammal tree
tree$tip.label[which(tree$tip.label=="Nanger_granti")]="Gazella_granti"
tree$tip.label[which(tree$tip.label=="Tragelaphus_oryx")]="Taurotragus_oryx"
tree$tip.label[which(tree$tip.label=="Equus_africanus")]="Equus_asinus"
tree$tip.label[which(tree$tip.label=="Equus_quagga")]="Equus_burchellii"
#remove unused tips
tree = drop.tip(tree, c("Tragelaphus_scriptus","Kobus_ellipsiprymnus"))
inv.phylo = inverseA(tree, nodes="TIPS", scale=T)
# using default normal for B, inverse wishart for variance parts
prior_normal = list(G=list(G1=list(V=1,nu=0.002),
G2=list(V=1,nu=0.002),
G3=list(V=1, nu=0.002)),
R=list(V=1,nu=0.002))
prior_normal2 = list(G=list(G1=list(V=1,nu=0.002),
G2=list(V=1,nu=0.002)),
R=list(V=1,nu=0.002))
PDMCMC = PDData_sum %>%
filter(is.na(pd.obs.p)==F)
PDMCMC$phylo = PDMCMC$MSW93_Binomial
# exclude cattle
PDMCMC2 = PDMCMC[-which(PDMCMC$Species=="Cattle"),]
dim(PDMCMC2)
