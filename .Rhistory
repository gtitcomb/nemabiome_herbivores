rare_nem2 <- rrarefy(t(tab3[,31:694]), 1000)
head(rare_nem2)
rare_nem <- Rarefy(t(tab3[,31:694]), depth=1000)
head(rare_nem)
head(rare_nem2)
rare_nem$total <-
rowSums(rare_nem)
rowSums(rare_nem)
dim(rare_nem)
length(rare_nem)
rowSums(rare_nem$otu.tab.rff)
rare_nem1 <- rare_nem$otu.tab.rff
rare_nem1 %>%
mutate(./1000)
rare_nem1 <- as.data.frame(rare_nem$otu.tab.rff)
rare_nem1 %>%
mutate(./1000)
names(rare_nem1)
rare_nem1 %>%
mutate_at(vars(V1:V329), funs(./1000))
rare_nem1_RRA_1pct <- rare_nem1_RRA %>%
filter_at(vars(V1:V329), funs(.>0.01))
# Divide by the number of reads per sample to get the relative read abundance
rare_nem1_RRA <- rare_nem1 %>%
mutate_at(vars(V1:V329), funs(./1000))
rare_nem1_RRA_1pct <- rare_nem1_RRA %>%
filter_at(vars(V1:V329), funs(.>0.01))
mutate_at(vars(V1:V329), funs(ifelse(.>0.01,.,0))
rare_nem1_RRA_1pct <- rare_nem1_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.01,.,0)))
colSums(rare_nem1_RRA_1pct)
length(which(colSums(rare_nem1_RRA_1pct)>0))
rare_nem1_RRA_1pct <- rare_nem1_RRA_1pct[-which(colSums(rare_nem1_RRA_1pct==0))]
rare_nem1_RRA_1pct <- rare_nem1_RRA_1pct[-which(colSums(rare_nem1_RRA_1pct)==0)]
dim(rare_nem1_RRA_1pct)
rare_nem1_RRA_5pct <- rare_nem1_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.05,.,0)))
rare_nem1_RRA_5pct <- rare_nem1_RRA_1pct[-which(colSums(rare_nem1_RRA_5pct)==0)]
dim(rare_nem1_RRA_5pct)
FECs <- read.csv("FEC_comparison.csv")
head(FECs)
t(tab3[,1:30])
rare_nem$discard
dim(tab3)
# Divide by the number of reads per sample to get the relative read abundance
rare_nem2_RRA <- rare_nem2 %>%
mutate_at(vars(V1:V329), funs(./1000))
rare_nem2 <- as.data.frame(rare_nem2)
# Divide by the number of reads per sample to get the relative read abundance
rare_nem2_RRA <- rare_nem2 %>%
mutate_at(vars(V1:V329), funs(./1000))
rare_nem2_RRA_1pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.01,.,0)))
rare_nem2_RRA_1pct <- rare_nem2_RRA_1pct[-which(colSums(rare_nem2_RRA_1pct)==0)]
rare_nem2_RRA_5pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.05,.,0)))
rare_nem2_RRA_5pct <- rare_nem2_RRA_1pct[-which(colSums(rare_nem2_RRA_5pct)==0)]
dim(rare_nem2_RRA_5pct)
dim(t(tab3[,1:30]))
dim(rare_nem2_RRA_5pct)
# Divide by the number of reads per sample to get the relative read abundance
rare_nem2_RRA <- rare_nem2 %>%
mutate_at(vars(V1:V329), funs(./1000))
rare_nem2_RRA_1pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.01,.,0)))
dim(rare_nem2_RRA_1pct)
# recombine
cbind(tab3[,1:30],t(rare_nem2_RRA_1pct))
# recombine
rare_nem2_RRA_1pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_1pct))
dim(rare_nem2_RRA_1pct)
head(rare_nem2_RRA_1pct)
rare_nem2_RRA_1pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.01,.,0)))
names(rare_nem2_RRA_1pct)
rownames(rare_nem2_RRA_1pct)
names(tab3)[30:694]
names(tab3)[31:694]
rownames(rare_nem2_RRA_1pct)
rownames(rare_nem2_RRA_1pct) <- names(tab3)[31:694]
# recombine
rare_nem2_RRA_1pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_1pct))
head(rare_nem2_RRA_1pct)
dim(rare_nem2_RRA_1pct)
# remove empty OTU rows
rare_nem2_RRA_1pct <- rare_nem2_RRA_1pct[-which(rowSums(rare_nem2_RRA_1pct[,31:694])==0),]
dim(rare_nem2_RRA_1pct)
rare_nem2_RRA_5pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_5pct))
rownames(rare_nem2_RRA_5pct) <- names(tab3)[31:694]
rare_nem2_RRA_5pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_5pct))
rare_nem2_RRA_5pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.05,.,0)))
rownames(rare_nem2_RRA_5pct) <- names(tab3)[31:694]
rare_nem2_RRA_5pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_5pct))
rare_nem2_RRA_5pct <- rare_nem2_RRA_5pct[-which(rowSums(rare_nem2_RRA_5pct[,31:694])==0),]
dim(rare_nem2_RRA_5pct)
head(rare_nem2_RRA_1pct)
head(FECs)
ggplot(FECs, aes(x=Reads, y=FEC))+
geom_point()
colSums(rare_nem2_RRA_5pct)
dim(rare_nem2_RRA_5pct)
colSums(rare_nem2_RRA_5pct[,30:694])
colSums(rare_nem2_RRA_5pct[,31:694])
head(FECs)
str_pad(otus_df3$Number, 3, pad = "0")
rare_nem2_RRA_5pct_t <- t(rare_nem2_RRA_5pct[,31:694])
rare_nem2_RRA_5pct_t
rare_nem2_RRA_5pct_t$Sample <- rownames(rare_nem2_RRA_5pct_t)
head(rare_nem2_RRA_5pct_t)
rare_nem2_RRA_5pct
head(FECs)
FECs$sample2 <- paste("sample.",FECs$Sample)
FECs$sample2 %in% names(rare_nem2_RRA_5pct)
FECs$sample2
FECs$sample2 <- paste("sample.",FECs$Sample, sep="")
FECs$sample2
FECs$sample2 %in% names(rare_nem2_RRA_5pct)
names(rare_nem2_RRA_5pct[,31:694])
names(rare_nem2_RRA_5pct[,31:694]) <- str_pad(rare_nem2_RRA_5pct[,31:694],3,pad="0")
names(rare_nem2_RRA_5pct[,31:694])
FECs$sample2 %in% names(rare_nem2_RRA_5pct)
FECs$sample2 %in% names(rare_nem2_RRA_5pct)
FECs$sample2
colSums(rare_nem2_RRA_5pct)
colSums(rare_nem2_RRA_5pct[,31:694])
which(names(rare_nem2_RRA_5pct) %in% FECs$sample2)
colSums(rare_nem2_RRA_5pct[,30+(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))])
join(FEcs, colSums(rare_nem2_RRA_5pct[,30+(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]))
join(FECs, colSums(rare_nem2_RRA_5pct[,30+(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]))
join(FECs, as.data.frame(colSums(rare_nem2_RRA_5pct[,30+(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))])))
as.data.frame(colSums(rare_nem2_RRA_5pct[,30+(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]))
b <- as.data.frame(colSums(rare_nem2_RRA_5pct[,30+(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]))
names(b)
b$sample2 <- rownames(b)
names(b)
names(b) <- c("RRAtot","sample2")
together <- join(FECs, b)
together
b
summary(b)
together <- left_join(FECs, b)
together
together <- dplyr::left_join(FECs, b)
together
together <- merge(FECs, b)
together
together <- join(FECs, b, by="sample2")
together <- inner_join(FECs, b, by="sample2")
together
together <- join(FECs, b, by="sample2")
together
summary(b)
summary(FECs)
b$sample2 <- as.factor(b$sample2)
together <- join(FECs, b, by="sample2")
together
b$RRAtot <- as.numeric(b$RRAtot)
together <- join(FECs, b, by="sample2")
together
joined_df <- join(FECs, b, by="sample2")
joined_df
b
joined_df <- join(b, FECs by="sample2")
joined_df <- join(b, FECs, by="sample2")
joined_df
FECs$sample2 <- as.factor(FECs$sample2)
joined_df <- join(b, FECs, by="sample2")
joined_df
FECs$sample2
b$sample2
FECs$sample2 %in% b$sample2
which(names(rare_nem2_RRA_5pct) %in% FECs$sample2)
rare_nem2_RRA_5pct[,which(names(rare_nem2_RRA_5pct) %in% FECs$sample2)]
rare_nem2_RRA_5pct[,30+(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]
FECs$sample2
names(rare_nem2_RRA_5pct)
b <- as.data.frame(colSums(rare_nem2_RRA_5pct[,(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))-30]))
b$sample2 <- rownames(b)
names(b) <- c("RRAtot","sample2")
b$sample2 <- as.factor(b$sample2)
FECs$sample2 <- as.factor(FECs$sample2)
b$RRAtot <- as.numeric(b$RRAtot)
FECs$sample2 %in% b$sample2
joined_df <- join(b, FECs, by="sample2")
joined_df
rare_nem2_RRA_5pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.05,.,0)))
rownames(rare_nem2_RRA_5pct) <- names(tab3)[31:694]
rare_nem2_RRA_5pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_5pct))
rare_nem2_RRA_5pct <- rare_nem2_RRA_5pct[-which(rowSums(rare_nem2_RRA_5pct[,31:694])==0),]
dim(rare_nem2_RRA_5pct)
names(rare_nem2_RRA_5pct)[,31:694] <- str_pad(names(rare_nem2_RRA_5pct)[,31:694],3,pad="0")
names(rare_nem2_RRA_5pct)[31:694] <- str_pad(names(rare_nem2_RRA_5pct)[31:694],3,pad="0")
rare_nem2_RRA_5pct[,(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]
b <- as.data.frame(colSums(rare_nem2_RRA_5pct[,(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]))
b$sample2 <- rownames(b)
names(b) <- c("RRAtot","sample2")
b$sample2 <- as.factor(b$sample2)
FECs$sample2 <- as.factor(FECs$sample2)
b$RRAtot <- as.numeric(b$RRAtot)
FECs$sample2 %in% b$sample2
joined_df <- join(b, FECs, by="sample2")
joined_df
joined_df <- join(FECs, b, by="sample2")
joined_df
joined_df <- joined_df %>%
mutate_at(vars(RRAtot), funs(ifelse(is.na(.)==T,0,.)))
ggplot(joined_df, aes(x=FEC, y=RRAtot))+
geom_point(aes(color=log(Reads+1)))
ggplot(joined_df, aes(x=FEC, y=RRAtot))+
geom_point(aes(color=log(Reads+1)), size=2)
ggplot(joined_df, aes(x=FEC, y=RRAtot))+
geom_point(aes(color=log(Reads+1)), size=2)+
ggtitle("FECs vs Sequencing using 1% cutoff threshold")
ggplot(joined_df, aes(x=FEC, y=RRAtot))+
geom_point(aes(color=log(Reads+1)), size=2)+
ggtitle("FECs vs Sequencing using 5% cutoff threshold")
#This project has subquestions that vary by species, including a howmany and select-all behaviors
jdata_unfiltered <- read.csv(file = "parasite-safari-classifications.csv", stringsAsFactors = F)
final <- read.csv("classification_summary_Dec2018.csv")
library(vegan)
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
library(tidyverse)
library(dplyr)
rare_nem2 <- rrarefy(t(tab3[,31:694]))
length(which(colSums(tab3[31:694])<1000)) # only one sample affected
# average reads per sample
summary(colSums(tab3[31:694]))
par(mfrow=c(1,2))
hist(colSums(tab3[31:694]), main="Distribution of reads per sample")
hist(log(colSums(tab3[31:694])), main="Distribution of log(reads per sample)")
min(colSums(tab3[31:694]))
max(colSums(tab3[31:694]))
otus <- read.csv("with_names.csv")
tab3 <- read.table("OTU_log3.tab", header=T)
dim(tab3)
# This is the other OTU table based on different filtering thresholds
#tab35 <- read.table("OTU_log3.5.tab")
#dim(tab35)
rare_nem2 <- rrarefy(t(tab3[,31:694]))
rare_nem2 <- rrarefy(t(tab3[,31:694]), sample=533)
length(which(colSums(tab3[31:694])<1000)) # only one sample affected
rare_nem2 <- as.data.frame(rare_nem2)
# Divide by the number of reads per sample to get the relative read abundance
rare_nem2_RRA <- rare_nem2 %>%
mutate_at(vars(V1:V329), funs(./1000))
rare_nem2_RRA_1pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.01,.,0)))
rownames(rare_nem2_RRA_1pct) <- names(tab3)[31:694]
# recombine
rare_nem2_RRA_1pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_1pct))
# remove empty OTU rows
rare_nem2_RRA_1pct <- rare_nem2_RRA_1pct[-which(rowSums(rare_nem2_RRA_1pct[,31:694])==0),]
dim(rare_nem2_RRA_1pct)
rare_nem2_RRA_5pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.05,.,0)))
rownames(rare_nem2_RRA_5pct) <- names(tab3)[31:694]
rare_nem2_RRA_5pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_5pct))
rare_nem2_RRA_5pct <- rare_nem2_RRA_5pct[-which(rowSums(rare_nem2_RRA_5pct[,31:694])==0),]
dim(rare_nem2_RRA_5pct)
FECs <- read.csv("FEC_comparison.csv")
ggplot(FECs, aes(x=Reads, y=FEC))+
geom_point()
FECs$sample2 <- paste("sample.",FECs$Sample, sep="")
names(rare_nem2_RRA_5pct)[31:694] <- str_pad(names(rare_nem2_RRA_5pct)[31:694],3,pad="0")
rare_nem2_RRA_5pct[,(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]
b <- as.data.frame(colSums(rare_nem2_RRA_5pct[,(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]))
b$sample2 <- rownames(b)
names(b) <- c("RRAtot","sample2")
joined_df <- left_join(FECs, b, by="sample2")
joined_df <- joined_df %>%
mutate_at(vars(RRAtot), funs(ifelse(is.na(.)==T,0,.)))
ggplot(joined_df, aes(x=FEC, y=RRAtot))+
geom_point(aes(color=log(Reads+1)), size=2)+
ggtitle("FECs vs Sequencing using 5% cutoff threshold")
# Divide by the number of reads per sample to get the relative read abundance
rare_nem2_RRA <- rare_nem2 %>%
mutate_at(vars(V1:V329), funs(./533))
rare_nem2_RRA_1pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.01,.,0)))
rownames(rare_nem2_RRA_1pct) <- names(tab3)[31:694]
# recombine
rare_nem2_RRA_1pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_1pct))
# remove empty OTU rows
rare_nem2_RRA_1pct <- rare_nem2_RRA_1pct[-which(rowSums(rare_nem2_RRA_1pct[,31:694])==0),]
dim(rare_nem2_RRA_1pct)
rare_nem2_RRA_5pct <- rare_nem2_RRA %>%
mutate_at(vars(V1:V329), funs(ifelse(.>0.05,.,0)))
rownames(rare_nem2_RRA_5pct) <- names(tab3)[31:694]
rare_nem2_RRA_5pct <- cbind(tab3[,1:30],t(rare_nem2_RRA_5pct))
rare_nem2_RRA_5pct <- rare_nem2_RRA_5pct[-which(rowSums(rare_nem2_RRA_5pct[,31:694])==0),]
dim(rare_nem2_RRA_5pct)
FECs <- read.csv("FEC_comparison.csv")
ggplot(FECs, aes(x=Reads, y=FEC))+
geom_point()
FECs$sample2 <- paste("sample.",FECs$Sample, sep="")
names(rare_nem2_RRA_5pct)[31:694] <- str_pad(names(rare_nem2_RRA_5pct)[31:694],3,pad="0")
b <- as.data.frame(colSums(rare_nem2_RRA_5pct[,(which(names(rare_nem2_RRA_5pct) %in% FECs$sample2))]))
b$sample2 <- rownames(b)
names(b) <- c("RRAtot","sample2")
joined_df <- left_join(FECs, b, by="sample2")
joined_df <- joined_df %>%
mutate_at(vars(RRAtot), funs(ifelse(is.na(.)==T,0,.)))
ggplot(joined_df, aes(x=FEC, y=RRAtot))+
geom_point(aes(color=log(Reads+1)), size=2)+
ggtitle("FECs vs Sequencing using 5% cutoff threshold")
b <- as.data.frame(colSums(rare_nem2_RRA_1pct[,(which(names(rare_nem2_RRA_1pct) %in% FECs$sample2))]))
b$sample2 <- rownames(b)
names(b) <- c("RRAtot","sample2")
joined_df <- left_join(FECs, b, by="sample2")
joined_df <- joined_df %>%
mutate_at(vars(RRAtot), funs(ifelse(is.na(.)==T,0,.)))
ggplot(joined_df, aes(x=FEC, y=RRAtot))+
geom_point(aes(color=log(Reads+1)), size=2)+
ggtitle("FECs vs Sequencing using 5% cutoff threshold")
rare_nem2_RRA_1pct
levels(rare_nem2_RRA_1pct$oder_name_ok)
rare_nem2_RRA_1pct
ggplot(rare_nem2_RRA_1pct, aes(y=family_name))+
geom_bar()
ggplot(rare_nem2_RRA_1pct, aes(x=family_name))+
geom_bar()
ggplot(rare_nem2_RRA_1pct, aes(x=family_name))+
geom_bar()+
theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(rare_nem2_RRA_1pct, aes(x=family_name))+
geom_bar(aes(col=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(rare_nem2_RRA_1pct, aes(x=family_name))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
library(forcats)
rare_nem2_RRA_1pct %>%
count(family_name) %>%
mutate(family_name = fct_reorder(family_name, n, .desc = TRUE)) %>%
ggplot(aes(x = family_name, y = n)) + geom_bar(stat = 'identity')
rare_nem2_RRA_1pct %>%
count(family_name)
rare_nem2_RRA_1pct %>%
count(rare_nem2_RRA_1pct$family_name) %>%
mutate(family_name = fct_reorder(family_name, n, .desc = TRUE)) %>%
ggplot(aes(x = family_name, y = n)) + geom_bar(stat = 'identity')
ggplot(rare_nem2_RRA_1pct, aes(x=reorder(family_name, -rare_nem2_RRA_1pct(family_name)[family_name])))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(rare_nem2_RRA_1pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
# and 5%
ggplot(rare_nem2_RRA_5pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
library(gridExtra)
grid.arrange(p1, p2)
p1 <- ggplot(rare_nem2_RRA_1pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
# and 5%
p2 <- ggplot(rare_nem2_RRA_5pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
grid.arrange(p1, p2)
grid.arrange(p1, p2, ncol=2)
# using the 1% threshold:
p1 <- ggplot(rare_nem2_RRA_1pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))+
xlab("Family Name")+
ggtitle("1% threshold")
# and 5%
p2 <- ggplot(rare_nem2_RRA_5pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=family_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))+
xlab("Family Name")+
ggtitle("5% threshold")
grid.arrange(p1, p2, ncol=2)
ggplot(rare_nem2_RRA_1pct, aes(x=reorder(family_name, -table(genus_name)[genus_name])))+
geom_bar(aes(fill=genus_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))+
xlab("Family Name")+
ggtitle("1% threshold")
# looking at genus:
p1 <- ggplot(rare_nem2_RRA_1pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=genus_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))+
xlab("Family Name")+
ggtitle("1% threshold")
# and 5%
p2 <- ggplot(rare_nem2_RRA_5pct, aes(x=reorder(family_name, -table(family_name)[family_name])))+
geom_bar(aes(fill=genus_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))+
xlab("Family Name")+
ggtitle("5% threshold")
grid.arrange(p1, p2, ncol=2)
# I will do this using the species ID and names
names(rare_nem1_RRA_5pct)
# I will do this using the species ID and names
rownames(rare_nem1_RRA_5pct)
# I will do this using the species ID and names
head(rare_nem1_RRA_5pct)
# I will do this using the species ID and names
head(rare_nem2_RRA_5pct)
# I will do this using the species ID and names
names(rare_nem2_RRA_5pct)
RRA_t_5 <- as.data.frame(t(rare_nem2_RRA_5pct))
head(RRA_t_5)
RRA_t_5 <- as.data.frame(t(rare_nem2_RRA_5pct[,30:694]))
head(RRA_t_5)
RRA_t_5 <- as.data.frame(t(rare_nem2_RRA_5pct[,31:694]))
head(RRA_t_5)
?split()
rownames(RRA_t_5)[1]
strsplit(rownames(RRA_t_5)[1], ".")
strsplit(rownames(RRA_t_5)[1], "_")
strsplit(rownames(RRA_t_5)[1], "'.")
strsplit(rownames(RRA_t_5)[1], "'.'")
sub(rownames(RRA_t_5)[1], "sample")
sub("sample",rownames(RRA_t_5)[1])
sub("sample",x=rownames(RRA_t_5)[1])
sub("sample",replacement="",x=rownames(RRA_t_5)[1])
RRA_t_5$sampleID <- sub("sample.",replacement="",x=rownames(RRA_t_5))
strsplit(RRA_t_5$sampleID,"_")[1]
strsplit(RRA_t_5$sampleID,"_")[[1]]
strsplit(RRA_t_5$sampleID,"_")[[1]][1]
strsplit(RRA_t_5$sampleID,"_")[[]][1]
strsplit(RRA_t_5$sampleID,"_")[[1:694]][1]
strsplit(RRA_t_5$sampleID,"_")[[2]][1]
strsplit(RRA_t_5$sampleID,"_")[[5]][1]
strsplit(RRA_t_5$sampleID,"_")[[200]][1]
dim(RRA_t_5)
strsplit(RRA_t_5$sampleID,"_")[[1:664]][1]
strsplit(RRA_t_5$sampleID,"_")[[1:10]][1]
head(RRA_t_5)
head(otus)
setwd("D:/Dropbox/Projects/Watering Holes/Data_all/Genetics/Analysis2/Rwork_nems/nem_data")
# bring in metadata
metadata <- read.csv("Sequenced_Samples_nem2018.csv")
head(metadata)
which(metadata$Sample %in% RRA_t_5$sampleID)
which(metadata$Sample %in% RRA_t_5$sampleID == F)
length(which(metadata$Sample %in% RRA_t_5$sampleID == F))
length(which(metadata$Sample %in% RRA_t_5$sampleID == T))
# join the ones that match first
names(metadata)
# join the ones that match first
names(metadata)[5] <- "sampleID"
left_join(metadata, RRA_t_5)
joined_temp <- left_join(metadata, RRA_t_5)
# now the ones that don't match are the Mpala ones
head(RRA_t_5)
# now the ones that don't match are the Mpala ones
head(RRA_t_5$sampleID)
RRA_t_5$sampleID2 <- sub("MRC_",replacement="", x=RRA_t_5$sampleID)
RRA_t_5$sampleID2 %in% metadata$sampleID
RRA_t_5$sampleID2
RRA_t_5$sampleID2 %in% metadata$sampleID
RRA_t_5$sampleID2[which(RRA_t_5$sampleID2 %in% metadata$sampleID == F)]
metadata$sampleID
RRA_t_5$sampleID2[which(RRA_t_5$sampleID2 %in% metadata$sampleID == F)]
sub("PNG_16", replacement="PNG16", x=RRA_t_5$sampleID2)
RRA_t_5$sampleID2 <- sub("PNG_16", replacement="PNG16", x=RRA_t_5$sampleID2)
RRA_t_5$sampleID2[which(RRA_t_5$sampleID2 %in% metadata$sampleID == F)]
RRA_t_5$sampleID2 <- sub("PNG_15", replacement="PNG15", x=RRA_t_5$sampleID2)
RRA_t_5$sampleID2[which(RRA_t_5$sampleID2 %in% metadata$sampleID == F)]
metadata$sampleID
# I will do this using the species ID and names
# transpose
RRA_t_5 <- as.data.frame(t(rare_nem2_RRA_5pct[,31:694]))
# remove "sample"
RRA_t_5$sampleID <- sub("sample.",replacement="",x=rownames(RRA_t_5))
# bring in metadata
metadata <- read.csv("Sequenced_Samples_nem2018.csv")
head(metadata)
length(which(metadata$Sample %in% RRA_t_5$sampleID == F))
length(which(metadata$Sample %in% RRA_t_5$sampleID == T))
# join the ones that match first
names(metadata)[5] <- "sampleID"
RRA_t_5$sampleID2 <- sub("MRC_",replacement="", x=RRA_t_5$sampleID)
RRA_t_5$sampleID2 <- sub("PNG_16", replacement="PNG16", x=RRA_t_5$sampleID2)
RRA_t_5$sampleID2 <- sub("PNG_15", replacement="JAG15", x=RRA_t_5$sampleID2)
RRA_t_5$sampleID2[which(RRA_t_5$sampleID2 %in% metadata$sampleID == F)]
# I need to turn all of these into PNG16 rather than PNG_16
# join the ones that match first
names(metadata)[5] <- "sampleID2"
left_join(metadata, RRA_t_5)
RRA_5_join <- left_join(metadata, RRA_t_5)
View(RRA_5_join)
# Repeat this for the 1%
# transpose
RRA_t_1 <- as.data.frame(t(rare_nem2_RRA_1pct[,31:694]))
# remove "sample"
RRA_t_1$sampleID <- sub("sample.",replacement="",x=rownames(RRA_t_1))
# bring in metadata
metadata <- read.csv("Sequenced_Samples_nem2018.csv")
length(which(metadata$Sample %in% RRA_t_1$sampleID == F))
length(which(metadata$Sample %in% RRA_t_1$sampleID == T))
# edit sample names to make sure they match up
RRA_t_1$sampleID2 <- sub("MRC_",replacement="", x=RRA_t_1$sampleID)
RRA_t_1$sampleID2 <- sub("PNG_16", replacement="PNG16", x=RRA_t_1$sampleID2)
RRA_t_1$sampleID2 <- sub("PNG_15", replacement="JAG15", x=RRA_t_1$sampleID2)
RRA_t_1$sampleID2[which(RRA_t_1$sampleID2 %in% metadata$sampleID == F)]
# rename so that joining column name matches
names(metadata)[5] <- "sampleID2"
RRA_1_join <- left_join(metadata, RRA_t_1)
RRA_t_1$sampleID2[which(RRA_t_1$sampleID2 %in% metadata$sampleID2 == F)]
RRA_1_join <- left_join(metadata, RRA_t_1)
length(which(is.na(RRA_1_join)))
head(RRA_1_join)
length(which(is.na(RRA_1_join$V1)))
length(which(is.na(RRA_5_join$V1)))
